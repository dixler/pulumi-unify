"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const aws = __importStar(require("@pulumi/aws"));
const awssdk = __importStar(require("aws-sdk"));
const parse_1 = require("../parse");
class Resource extends aws.networkmanager.Connection {
    constructor(...args) {
        super(...args);
        this.client = new awssdk.NetworkManager();
        this.ops = (0, parse_1.getResourceOperations)(this, require("../../aws-sdk-js/apis/networkmanager-2019-07-05.normal.json"), this.client);
    }
    acceptAttachment(partialParams) {
        return this.client.acceptAttachment(this.ops["AcceptAttachment"].apply(partialParams));
    }
    associateConnectPeer(partialParams) {
        return this.client.associateConnectPeer(this.ops["AssociateConnectPeer"].apply(partialParams));
    }
    associateCustomerGateway(partialParams) {
        return this.client.associateCustomerGateway(this.ops["AssociateCustomerGateway"].apply(partialParams));
    }
    associateLink(partialParams) {
        return this.client.associateLink(this.ops["AssociateLink"].apply(partialParams));
    }
    associateTransitGatewayConnectPeer(partialParams) {
        return this.client.associateTransitGatewayConnectPeer(this.ops["AssociateTransitGatewayConnectPeer"].apply(partialParams));
    }
    createConnectAttachment(partialParams) {
        return this.client.createConnectAttachment(this.ops["CreateConnectAttachment"].apply(partialParams));
    }
    createConnectPeer(partialParams) {
        return this.client.createConnectPeer(this.ops["CreateConnectPeer"].apply(partialParams));
    }
    createConnection(partialParams) {
        return this.client.createConnection(this.ops["CreateConnection"].apply(partialParams));
    }
    createCoreNetwork(partialParams) {
        return this.client.createCoreNetwork(this.ops["CreateCoreNetwork"].apply(partialParams));
    }
    createDevice(partialParams) {
        return this.client.createDevice(this.ops["CreateDevice"].apply(partialParams));
    }
    createLink(partialParams) {
        return this.client.createLink(this.ops["CreateLink"].apply(partialParams));
    }
    createSite(partialParams) {
        return this.client.createSite(this.ops["CreateSite"].apply(partialParams));
    }
    createSiteToSiteVpnAttachment(partialParams) {
        return this.client.createSiteToSiteVpnAttachment(this.ops["CreateSiteToSiteVpnAttachment"].apply(partialParams));
    }
    createVpcAttachment(partialParams) {
        return this.client.createVpcAttachment(this.ops["CreateVpcAttachment"].apply(partialParams));
    }
    deleteAttachment(partialParams) {
        return this.client.deleteAttachment(this.ops["DeleteAttachment"].apply(partialParams));
    }
    deleteConnectPeer(partialParams) {
        return this.client.deleteConnectPeer(this.ops["DeleteConnectPeer"].apply(partialParams));
    }
    deleteConnection(partialParams) {
        return this.client.deleteConnection(this.ops["DeleteConnection"].apply(partialParams));
    }
    deleteCoreNetwork(partialParams) {
        return this.client.deleteCoreNetwork(this.ops["DeleteCoreNetwork"].apply(partialParams));
    }
    deleteCoreNetworkPolicyVersion(partialParams) {
        return this.client.deleteCoreNetworkPolicyVersion(this.ops["DeleteCoreNetworkPolicyVersion"].apply(partialParams));
    }
    deleteDevice(partialParams) {
        return this.client.deleteDevice(this.ops["DeleteDevice"].apply(partialParams));
    }
    deleteGlobalNetwork(partialParams) {
        return this.client.deleteGlobalNetwork(this.ops["DeleteGlobalNetwork"].apply(partialParams));
    }
    deleteLink(partialParams) {
        return this.client.deleteLink(this.ops["DeleteLink"].apply(partialParams));
    }
    deleteResourcePolicy(partialParams) {
        return this.client.deleteResourcePolicy(this.ops["DeleteResourcePolicy"].apply(partialParams));
    }
    deleteSite(partialParams) {
        return this.client.deleteSite(this.ops["DeleteSite"].apply(partialParams));
    }
    deregisterTransitGateway(partialParams) {
        return this.client.deregisterTransitGateway(this.ops["DeregisterTransitGateway"].apply(partialParams));
    }
    disassociateConnectPeer(partialParams) {
        return this.client.disassociateConnectPeer(this.ops["DisassociateConnectPeer"].apply(partialParams));
    }
    disassociateCustomerGateway(partialParams) {
        return this.client.disassociateCustomerGateway(this.ops["DisassociateCustomerGateway"].apply(partialParams));
    }
    disassociateLink(partialParams) {
        return this.client.disassociateLink(this.ops["DisassociateLink"].apply(partialParams));
    }
    disassociateTransitGatewayConnectPeer(partialParams) {
        return this.client.disassociateTransitGatewayConnectPeer(this.ops["DisassociateTransitGatewayConnectPeer"].apply(partialParams));
    }
    executeCoreNetworkChangeSet(partialParams) {
        return this.client.executeCoreNetworkChangeSet(this.ops["ExecuteCoreNetworkChangeSet"].apply(partialParams));
    }
    getConnectAttachment(partialParams) {
        return this.client.getConnectAttachment(this.ops["GetConnectAttachment"].apply(partialParams));
    }
    getConnectPeer(partialParams) {
        return this.client.getConnectPeer(this.ops["GetConnectPeer"].apply(partialParams));
    }
    getConnectPeerAssociations(partialParams) {
        return this.client.getConnectPeerAssociations(this.ops["GetConnectPeerAssociations"].apply(partialParams));
    }
    getConnections(partialParams) {
        return this.client.getConnections(this.ops["GetConnections"].apply(partialParams));
    }
    getCoreNetwork(partialParams) {
        return this.client.getCoreNetwork(this.ops["GetCoreNetwork"].apply(partialParams));
    }
    getCoreNetworkChangeSet(partialParams) {
        return this.client.getCoreNetworkChangeSet(this.ops["GetCoreNetworkChangeSet"].apply(partialParams));
    }
    getCoreNetworkPolicy(partialParams) {
        return this.client.getCoreNetworkPolicy(this.ops["GetCoreNetworkPolicy"].apply(partialParams));
    }
    getCustomerGatewayAssociations(partialParams) {
        return this.client.getCustomerGatewayAssociations(this.ops["GetCustomerGatewayAssociations"].apply(partialParams));
    }
    getDevices(partialParams) {
        return this.client.getDevices(this.ops["GetDevices"].apply(partialParams));
    }
    getLinkAssociations(partialParams) {
        return this.client.getLinkAssociations(this.ops["GetLinkAssociations"].apply(partialParams));
    }
    getLinks(partialParams) {
        return this.client.getLinks(this.ops["GetLinks"].apply(partialParams));
    }
    getNetworkResourceCounts(partialParams) {
        return this.client.getNetworkResourceCounts(this.ops["GetNetworkResourceCounts"].apply(partialParams));
    }
    getNetworkResourceRelationships(partialParams) {
        return this.client.getNetworkResourceRelationships(this.ops["GetNetworkResourceRelationships"].apply(partialParams));
    }
    getNetworkResources(partialParams) {
        return this.client.getNetworkResources(this.ops["GetNetworkResources"].apply(partialParams));
    }
    getNetworkRoutes(partialParams) {
        return this.client.getNetworkRoutes(this.ops["GetNetworkRoutes"].apply(partialParams));
    }
    getNetworkTelemetry(partialParams) {
        return this.client.getNetworkTelemetry(this.ops["GetNetworkTelemetry"].apply(partialParams));
    }
    getResourcePolicy(partialParams) {
        return this.client.getResourcePolicy(this.ops["GetResourcePolicy"].apply(partialParams));
    }
    getRouteAnalysis(partialParams) {
        return this.client.getRouteAnalysis(this.ops["GetRouteAnalysis"].apply(partialParams));
    }
    getSiteToSiteVpnAttachment(partialParams) {
        return this.client.getSiteToSiteVpnAttachment(this.ops["GetSiteToSiteVpnAttachment"].apply(partialParams));
    }
    getSites(partialParams) {
        return this.client.getSites(this.ops["GetSites"].apply(partialParams));
    }
    getTransitGatewayConnectPeerAssociations(partialParams) {
        return this.client.getTransitGatewayConnectPeerAssociations(this.ops["GetTransitGatewayConnectPeerAssociations"].apply(partialParams));
    }
    getTransitGatewayRegistrations(partialParams) {
        return this.client.getTransitGatewayRegistrations(this.ops["GetTransitGatewayRegistrations"].apply(partialParams));
    }
    getVpcAttachment(partialParams) {
        return this.client.getVpcAttachment(this.ops["GetVpcAttachment"].apply(partialParams));
    }
    listCoreNetworkPolicyVersions(partialParams) {
        return this.client.listCoreNetworkPolicyVersions(this.ops["ListCoreNetworkPolicyVersions"].apply(partialParams));
    }
    listTagsForResource(partialParams) {
        return this.client.listTagsForResource(this.ops["ListTagsForResource"].apply(partialParams));
    }
    putCoreNetworkPolicy(partialParams) {
        return this.client.putCoreNetworkPolicy(this.ops["PutCoreNetworkPolicy"].apply(partialParams));
    }
    putResourcePolicy(partialParams) {
        return this.client.putResourcePolicy(this.ops["PutResourcePolicy"].apply(partialParams));
    }
    registerTransitGateway(partialParams) {
        return this.client.registerTransitGateway(this.ops["RegisterTransitGateway"].apply(partialParams));
    }
    rejectAttachment(partialParams) {
        return this.client.rejectAttachment(this.ops["RejectAttachment"].apply(partialParams));
    }
    restoreCoreNetworkPolicyVersion(partialParams) {
        return this.client.restoreCoreNetworkPolicyVersion(this.ops["RestoreCoreNetworkPolicyVersion"].apply(partialParams));
    }
    startRouteAnalysis(partialParams) {
        return this.client.startRouteAnalysis(this.ops["StartRouteAnalysis"].apply(partialParams));
    }
    tagResource(partialParams) {
        return this.client.tagResource(this.ops["TagResource"].apply(partialParams));
    }
    untagResource(partialParams) {
        return this.client.untagResource(this.ops["UntagResource"].apply(partialParams));
    }
    updateConnection(partialParams) {
        return this.client.updateConnection(this.ops["UpdateConnection"].apply(partialParams));
    }
    updateCoreNetwork(partialParams) {
        return this.client.updateCoreNetwork(this.ops["UpdateCoreNetwork"].apply(partialParams));
    }
    updateDevice(partialParams) {
        return this.client.updateDevice(this.ops["UpdateDevice"].apply(partialParams));
    }
    updateGlobalNetwork(partialParams) {
        return this.client.updateGlobalNetwork(this.ops["UpdateGlobalNetwork"].apply(partialParams));
    }
    updateLink(partialParams) {
        return this.client.updateLink(this.ops["UpdateLink"].apply(partialParams));
    }
    updateNetworkResourceMetadata(partialParams) {
        return this.client.updateNetworkResourceMetadata(this.ops["UpdateNetworkResourceMetadata"].apply(partialParams));
    }
    updateSite(partialParams) {
        return this.client.updateSite(this.ops["UpdateSite"].apply(partialParams));
    }
    updateVpcAttachment(partialParams) {
        return this.client.updateVpcAttachment(this.ops["UpdateVpcAttachment"].apply(partialParams));
    }
}
exports.default = Resource;
