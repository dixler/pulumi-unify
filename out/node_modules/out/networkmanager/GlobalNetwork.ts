
import * as aws from "@pulumi/aws";
import * as awssdk from "aws-sdk";
import {
    AcceptAttachmentRequest,
    AssociateConnectPeerRequest,
    AssociateCustomerGatewayRequest,
    AssociateLinkRequest,
    AssociateTransitGatewayConnectPeerRequest,
    CreateConnectAttachmentRequest,
    CreateConnectPeerRequest,
    CreateConnectionRequest,
    CreateCoreNetworkRequest,
    CreateDeviceRequest,
    CreateLinkRequest,
    CreateSiteRequest,
    CreateSiteToSiteVpnAttachmentRequest,
    CreateVpcAttachmentRequest,
    DeleteAttachmentRequest,
    DeleteConnectPeerRequest,
    DeleteConnectionRequest,
    DeleteCoreNetworkRequest,
    DeleteCoreNetworkPolicyVersionRequest,
    DeleteDeviceRequest,
    DeleteGlobalNetworkRequest,
    DeleteLinkRequest,
    DeleteResourcePolicyRequest,
    DeleteSiteRequest,
    DeregisterTransitGatewayRequest,
    DisassociateConnectPeerRequest,
    DisassociateCustomerGatewayRequest,
    DisassociateLinkRequest,
    DisassociateTransitGatewayConnectPeerRequest,
    ExecuteCoreNetworkChangeSetRequest,
    GetConnectAttachmentRequest,
    GetConnectPeerRequest,
    GetConnectPeerAssociationsRequest,
    GetConnectionsRequest,
    GetCoreNetworkRequest,
    GetCoreNetworkChangeSetRequest,
    GetCoreNetworkPolicyRequest,
    GetCustomerGatewayAssociationsRequest,
    GetDevicesRequest,
    GetLinkAssociationsRequest,
    GetLinksRequest,
    GetNetworkResourceCountsRequest,
    GetNetworkResourceRelationshipsRequest,
    GetNetworkResourcesRequest,
    GetNetworkRoutesRequest,
    GetNetworkTelemetryRequest,
    GetResourcePolicyRequest,
    GetRouteAnalysisRequest,
    GetSiteToSiteVpnAttachmentRequest,
    GetSitesRequest,
    GetTransitGatewayConnectPeerAssociationsRequest,
    GetTransitGatewayRegistrationsRequest,
    GetVpcAttachmentRequest,
    ListCoreNetworkPolicyVersionsRequest,
    ListTagsForResourceRequest,
    PutCoreNetworkPolicyRequest,
    PutResourcePolicyRequest,
    RegisterTransitGatewayRequest,
    RejectAttachmentRequest,
    RestoreCoreNetworkPolicyVersionRequest,
    StartRouteAnalysisRequest,
    TagResourceRequest,
    UntagResourceRequest,
    UpdateConnectionRequest,
    UpdateCoreNetworkRequest,
    UpdateDeviceRequest,
    UpdateGlobalNetworkRequest,
    UpdateLinkRequest,
    UpdateNetworkResourceMetadataRequest,
    UpdateSiteRequest,
    UpdateVpcAttachmentRequest,
    AcceptAttachmentResponse,
    AssociateConnectPeerResponse,
    AssociateCustomerGatewayResponse,
    AssociateLinkResponse,
    AssociateTransitGatewayConnectPeerResponse,
    CreateConnectAttachmentResponse,
    CreateConnectPeerResponse,
    CreateConnectionResponse,
    CreateCoreNetworkResponse,
    CreateDeviceResponse,
    CreateLinkResponse,
    CreateSiteResponse,
    CreateSiteToSiteVpnAttachmentResponse,
    CreateVpcAttachmentResponse,
    DeleteAttachmentResponse,
    DeleteConnectPeerResponse,
    DeleteConnectionResponse,
    DeleteCoreNetworkResponse,
    DeleteCoreNetworkPolicyVersionResponse,
    DeleteDeviceResponse,
    DeleteGlobalNetworkResponse,
    DeleteLinkResponse,
    DeleteResourcePolicyResponse,
    DeleteSiteResponse,
    DeregisterTransitGatewayResponse,
    DisassociateConnectPeerResponse,
    DisassociateCustomerGatewayResponse,
    DisassociateLinkResponse,
    DisassociateTransitGatewayConnectPeerResponse,
    ExecuteCoreNetworkChangeSetResponse,
    GetConnectAttachmentResponse,
    GetConnectPeerResponse,
    GetConnectPeerAssociationsResponse,
    GetConnectionsResponse,
    GetCoreNetworkResponse,
    GetCoreNetworkChangeSetResponse,
    GetCoreNetworkPolicyResponse,
    GetCustomerGatewayAssociationsResponse,
    GetDevicesResponse,
    GetLinkAssociationsResponse,
    GetLinksResponse,
    GetNetworkResourceCountsResponse,
    GetNetworkResourceRelationshipsResponse,
    GetNetworkResourcesResponse,
    GetNetworkRoutesResponse,
    GetNetworkTelemetryResponse,
    GetResourcePolicyResponse,
    GetRouteAnalysisResponse,
    GetSiteToSiteVpnAttachmentResponse,
    GetSitesResponse,
    GetTransitGatewayConnectPeerAssociationsResponse,
    GetTransitGatewayRegistrationsResponse,
    GetVpcAttachmentResponse,
    ListCoreNetworkPolicyVersionsResponse,
    ListTagsForResourceResponse,
    PutCoreNetworkPolicyResponse,
    PutResourcePolicyResponse,
    RegisterTransitGatewayResponse,
    RejectAttachmentResponse,
    RestoreCoreNetworkPolicyVersionResponse,
    StartRouteAnalysisResponse,
    TagResourceResponse,
    UntagResourceResponse,
    UpdateConnectionResponse,
    UpdateCoreNetworkResponse,
    UpdateDeviceResponse,
    UpdateGlobalNetworkResponse,
    UpdateLinkResponse,
    UpdateNetworkResourceMetadataResponse,
    UpdateSiteResponse,
    UpdateVpcAttachmentResponse
} from "aws-sdk/clients/networkmanager";

import {getResourceOperations} from "../parse";

type UndefinedProperties<T> = {
    [P in keyof T]-?: undefined extends T[P] ? P : never
}[keyof T]

type ToOptional<T> = Partial<Pick<T, UndefinedProperties<T>>> & Pick<T, Exclude<keyof T, UndefinedProperties<T>>>

export default class Resource extends aws.networkmanager.GlobalNetwork {
    private ops: any
    private client: any
    constructor(...args: ConstructorParameters<typeof aws.networkmanager.GlobalNetwork>) {
        super(...args)
        this.client = new awssdk.NetworkManager()
        this.ops = getResourceOperations(this as any, require("../../aws-sdk-js/apis/networkmanager-2019-07-05.normal.json"), this.client)
    }

    acceptAttachment(partialParams: ToOptional<{
      [K in keyof AcceptAttachmentRequest & keyof AcceptAttachmentRequest]: (AcceptAttachmentRequest & AcceptAttachmentRequest)[K]
    }>): AcceptAttachmentResponse {
        return this.client.acceptAttachment(
            this.ops["AcceptAttachment"].apply(partialParams)
        );
    }

    associateConnectPeer(partialParams: ToOptional<{
      [K in keyof AssociateConnectPeerRequest & keyof AssociateConnectPeerRequest]: (AssociateConnectPeerRequest & AssociateConnectPeerRequest)[K]
    }>): AssociateConnectPeerResponse {
        return this.client.associateConnectPeer(
            this.ops["AssociateConnectPeer"].apply(partialParams)
        );
    }

    associateCustomerGateway(partialParams: ToOptional<{
      [K in keyof AssociateCustomerGatewayRequest & keyof AssociateCustomerGatewayRequest]: (AssociateCustomerGatewayRequest & AssociateCustomerGatewayRequest)[K]
    }>): AssociateCustomerGatewayResponse {
        return this.client.associateCustomerGateway(
            this.ops["AssociateCustomerGateway"].apply(partialParams)
        );
    }

    associateLink(partialParams: ToOptional<{
      [K in keyof AssociateLinkRequest & keyof AssociateLinkRequest]: (AssociateLinkRequest & AssociateLinkRequest)[K]
    }>): AssociateLinkResponse {
        return this.client.associateLink(
            this.ops["AssociateLink"].apply(partialParams)
        );
    }

    associateTransitGatewayConnectPeer(partialParams: ToOptional<{
      [K in keyof AssociateTransitGatewayConnectPeerRequest & keyof AssociateTransitGatewayConnectPeerRequest]: (AssociateTransitGatewayConnectPeerRequest & AssociateTransitGatewayConnectPeerRequest)[K]
    }>): AssociateTransitGatewayConnectPeerResponse {
        return this.client.associateTransitGatewayConnectPeer(
            this.ops["AssociateTransitGatewayConnectPeer"].apply(partialParams)
        );
    }

    createConnectAttachment(partialParams: ToOptional<{
      [K in keyof CreateConnectAttachmentRequest & keyof CreateConnectAttachmentRequest]: (CreateConnectAttachmentRequest & CreateConnectAttachmentRequest)[K]
    }>): CreateConnectAttachmentResponse {
        return this.client.createConnectAttachment(
            this.ops["CreateConnectAttachment"].apply(partialParams)
        );
    }

    createConnectPeer(partialParams: ToOptional<{
      [K in keyof CreateConnectPeerRequest & keyof CreateConnectPeerRequest]: (CreateConnectPeerRequest & CreateConnectPeerRequest)[K]
    }>): CreateConnectPeerResponse {
        return this.client.createConnectPeer(
            this.ops["CreateConnectPeer"].apply(partialParams)
        );
    }

    createConnection(partialParams: ToOptional<{
      [K in keyof CreateConnectionRequest & keyof CreateConnectionRequest]: (CreateConnectionRequest & CreateConnectionRequest)[K]
    }>): CreateConnectionResponse {
        return this.client.createConnection(
            this.ops["CreateConnection"].apply(partialParams)
        );
    }

    createCoreNetwork(partialParams: ToOptional<{
      [K in keyof CreateCoreNetworkRequest & keyof CreateCoreNetworkRequest]: (CreateCoreNetworkRequest & CreateCoreNetworkRequest)[K]
    }>): CreateCoreNetworkResponse {
        return this.client.createCoreNetwork(
            this.ops["CreateCoreNetwork"].apply(partialParams)
        );
    }

    createDevice(partialParams: ToOptional<{
      [K in keyof CreateDeviceRequest & keyof CreateDeviceRequest]: (CreateDeviceRequest & CreateDeviceRequest)[K]
    }>): CreateDeviceResponse {
        return this.client.createDevice(
            this.ops["CreateDevice"].apply(partialParams)
        );
    }

    createLink(partialParams: ToOptional<{
      [K in keyof CreateLinkRequest & keyof CreateLinkRequest]: (CreateLinkRequest & CreateLinkRequest)[K]
    }>): CreateLinkResponse {
        return this.client.createLink(
            this.ops["CreateLink"].apply(partialParams)
        );
    }

    createSite(partialParams: ToOptional<{
      [K in keyof CreateSiteRequest & keyof CreateSiteRequest]: (CreateSiteRequest & CreateSiteRequest)[K]
    }>): CreateSiteResponse {
        return this.client.createSite(
            this.ops["CreateSite"].apply(partialParams)
        );
    }

    createSiteToSiteVpnAttachment(partialParams: ToOptional<{
      [K in keyof CreateSiteToSiteVpnAttachmentRequest & keyof CreateSiteToSiteVpnAttachmentRequest]: (CreateSiteToSiteVpnAttachmentRequest & CreateSiteToSiteVpnAttachmentRequest)[K]
    }>): CreateSiteToSiteVpnAttachmentResponse {
        return this.client.createSiteToSiteVpnAttachment(
            this.ops["CreateSiteToSiteVpnAttachment"].apply(partialParams)
        );
    }

    createVpcAttachment(partialParams: ToOptional<{
      [K in keyof CreateVpcAttachmentRequest & keyof CreateVpcAttachmentRequest]: (CreateVpcAttachmentRequest & CreateVpcAttachmentRequest)[K]
    }>): CreateVpcAttachmentResponse {
        return this.client.createVpcAttachment(
            this.ops["CreateVpcAttachment"].apply(partialParams)
        );
    }

    deleteAttachment(partialParams: ToOptional<{
      [K in keyof DeleteAttachmentRequest & keyof DeleteAttachmentRequest]: (DeleteAttachmentRequest & DeleteAttachmentRequest)[K]
    }>): DeleteAttachmentResponse {
        return this.client.deleteAttachment(
            this.ops["DeleteAttachment"].apply(partialParams)
        );
    }

    deleteConnectPeer(partialParams: ToOptional<{
      [K in keyof DeleteConnectPeerRequest & keyof DeleteConnectPeerRequest]: (DeleteConnectPeerRequest & DeleteConnectPeerRequest)[K]
    }>): DeleteConnectPeerResponse {
        return this.client.deleteConnectPeer(
            this.ops["DeleteConnectPeer"].apply(partialParams)
        );
    }

    deleteConnection(partialParams: ToOptional<{
      [K in keyof DeleteConnectionRequest & keyof DeleteConnectionRequest]: (DeleteConnectionRequest & DeleteConnectionRequest)[K]
    }>): DeleteConnectionResponse {
        return this.client.deleteConnection(
            this.ops["DeleteConnection"].apply(partialParams)
        );
    }

    deleteCoreNetwork(partialParams: ToOptional<{
      [K in keyof DeleteCoreNetworkRequest & keyof DeleteCoreNetworkRequest]: (DeleteCoreNetworkRequest & DeleteCoreNetworkRequest)[K]
    }>): DeleteCoreNetworkResponse {
        return this.client.deleteCoreNetwork(
            this.ops["DeleteCoreNetwork"].apply(partialParams)
        );
    }

    deleteCoreNetworkPolicyVersion(partialParams: ToOptional<{
      [K in keyof DeleteCoreNetworkPolicyVersionRequest & keyof DeleteCoreNetworkPolicyVersionRequest]: (DeleteCoreNetworkPolicyVersionRequest & DeleteCoreNetworkPolicyVersionRequest)[K]
    }>): DeleteCoreNetworkPolicyVersionResponse {
        return this.client.deleteCoreNetworkPolicyVersion(
            this.ops["DeleteCoreNetworkPolicyVersion"].apply(partialParams)
        );
    }

    deleteDevice(partialParams: ToOptional<{
      [K in keyof DeleteDeviceRequest & keyof DeleteDeviceRequest]: (DeleteDeviceRequest & DeleteDeviceRequest)[K]
    }>): DeleteDeviceResponse {
        return this.client.deleteDevice(
            this.ops["DeleteDevice"].apply(partialParams)
        );
    }

    deleteGlobalNetwork(partialParams: ToOptional<{
      [K in keyof DeleteGlobalNetworkRequest & keyof DeleteGlobalNetworkRequest]: (DeleteGlobalNetworkRequest & DeleteGlobalNetworkRequest)[K]
    }>): DeleteGlobalNetworkResponse {
        return this.client.deleteGlobalNetwork(
            this.ops["DeleteGlobalNetwork"].apply(partialParams)
        );
    }

    deleteLink(partialParams: ToOptional<{
      [K in keyof DeleteLinkRequest & keyof DeleteLinkRequest]: (DeleteLinkRequest & DeleteLinkRequest)[K]
    }>): DeleteLinkResponse {
        return this.client.deleteLink(
            this.ops["DeleteLink"].apply(partialParams)
        );
    }

    deleteResourcePolicy(partialParams: ToOptional<{
      [K in keyof DeleteResourcePolicyRequest & keyof DeleteResourcePolicyRequest]: (DeleteResourcePolicyRequest & DeleteResourcePolicyRequest)[K]
    }>): DeleteResourcePolicyResponse {
        return this.client.deleteResourcePolicy(
            this.ops["DeleteResourcePolicy"].apply(partialParams)
        );
    }

    deleteSite(partialParams: ToOptional<{
      [K in keyof DeleteSiteRequest & keyof DeleteSiteRequest]: (DeleteSiteRequest & DeleteSiteRequest)[K]
    }>): DeleteSiteResponse {
        return this.client.deleteSite(
            this.ops["DeleteSite"].apply(partialParams)
        );
    }

    deregisterTransitGateway(partialParams: ToOptional<{
      [K in keyof DeregisterTransitGatewayRequest & keyof DeregisterTransitGatewayRequest]: (DeregisterTransitGatewayRequest & DeregisterTransitGatewayRequest)[K]
    }>): DeregisterTransitGatewayResponse {
        return this.client.deregisterTransitGateway(
            this.ops["DeregisterTransitGateway"].apply(partialParams)
        );
    }

    disassociateConnectPeer(partialParams: ToOptional<{
      [K in keyof DisassociateConnectPeerRequest & keyof DisassociateConnectPeerRequest]: (DisassociateConnectPeerRequest & DisassociateConnectPeerRequest)[K]
    }>): DisassociateConnectPeerResponse {
        return this.client.disassociateConnectPeer(
            this.ops["DisassociateConnectPeer"].apply(partialParams)
        );
    }

    disassociateCustomerGateway(partialParams: ToOptional<{
      [K in keyof DisassociateCustomerGatewayRequest & keyof DisassociateCustomerGatewayRequest]: (DisassociateCustomerGatewayRequest & DisassociateCustomerGatewayRequest)[K]
    }>): DisassociateCustomerGatewayResponse {
        return this.client.disassociateCustomerGateway(
            this.ops["DisassociateCustomerGateway"].apply(partialParams)
        );
    }

    disassociateLink(partialParams: ToOptional<{
      [K in keyof DisassociateLinkRequest & keyof DisassociateLinkRequest]: (DisassociateLinkRequest & DisassociateLinkRequest)[K]
    }>): DisassociateLinkResponse {
        return this.client.disassociateLink(
            this.ops["DisassociateLink"].apply(partialParams)
        );
    }

    disassociateTransitGatewayConnectPeer(partialParams: ToOptional<{
      [K in keyof DisassociateTransitGatewayConnectPeerRequest & keyof DisassociateTransitGatewayConnectPeerRequest]: (DisassociateTransitGatewayConnectPeerRequest & DisassociateTransitGatewayConnectPeerRequest)[K]
    }>): DisassociateTransitGatewayConnectPeerResponse {
        return this.client.disassociateTransitGatewayConnectPeer(
            this.ops["DisassociateTransitGatewayConnectPeer"].apply(partialParams)
        );
    }

    executeCoreNetworkChangeSet(partialParams: ToOptional<{
      [K in keyof ExecuteCoreNetworkChangeSetRequest & keyof ExecuteCoreNetworkChangeSetRequest]: (ExecuteCoreNetworkChangeSetRequest & ExecuteCoreNetworkChangeSetRequest)[K]
    }>): ExecuteCoreNetworkChangeSetResponse {
        return this.client.executeCoreNetworkChangeSet(
            this.ops["ExecuteCoreNetworkChangeSet"].apply(partialParams)
        );
    }

    getConnectAttachment(partialParams: ToOptional<{
      [K in keyof GetConnectAttachmentRequest & keyof GetConnectAttachmentRequest]: (GetConnectAttachmentRequest & GetConnectAttachmentRequest)[K]
    }>): GetConnectAttachmentResponse {
        return this.client.getConnectAttachment(
            this.ops["GetConnectAttachment"].apply(partialParams)
        );
    }

    getConnectPeer(partialParams: ToOptional<{
      [K in keyof GetConnectPeerRequest & keyof GetConnectPeerRequest]: (GetConnectPeerRequest & GetConnectPeerRequest)[K]
    }>): GetConnectPeerResponse {
        return this.client.getConnectPeer(
            this.ops["GetConnectPeer"].apply(partialParams)
        );
    }

    getConnectPeerAssociations(partialParams: ToOptional<{
      [K in keyof GetConnectPeerAssociationsRequest & keyof GetConnectPeerAssociationsRequest]: (GetConnectPeerAssociationsRequest & GetConnectPeerAssociationsRequest)[K]
    }>): GetConnectPeerAssociationsResponse {
        return this.client.getConnectPeerAssociations(
            this.ops["GetConnectPeerAssociations"].apply(partialParams)
        );
    }

    getConnections(partialParams: ToOptional<{
      [K in keyof GetConnectionsRequest & keyof GetConnectionsRequest]: (GetConnectionsRequest & GetConnectionsRequest)[K]
    }>): GetConnectionsResponse {
        return this.client.getConnections(
            this.ops["GetConnections"].apply(partialParams)
        );
    }

    getCoreNetwork(partialParams: ToOptional<{
      [K in keyof GetCoreNetworkRequest & keyof GetCoreNetworkRequest]: (GetCoreNetworkRequest & GetCoreNetworkRequest)[K]
    }>): GetCoreNetworkResponse {
        return this.client.getCoreNetwork(
            this.ops["GetCoreNetwork"].apply(partialParams)
        );
    }

    getCoreNetworkChangeSet(partialParams: ToOptional<{
      [K in keyof GetCoreNetworkChangeSetRequest & keyof GetCoreNetworkChangeSetRequest]: (GetCoreNetworkChangeSetRequest & GetCoreNetworkChangeSetRequest)[K]
    }>): GetCoreNetworkChangeSetResponse {
        return this.client.getCoreNetworkChangeSet(
            this.ops["GetCoreNetworkChangeSet"].apply(partialParams)
        );
    }

    getCoreNetworkPolicy(partialParams: ToOptional<{
      [K in keyof GetCoreNetworkPolicyRequest & keyof GetCoreNetworkPolicyRequest]: (GetCoreNetworkPolicyRequest & GetCoreNetworkPolicyRequest)[K]
    }>): GetCoreNetworkPolicyResponse {
        return this.client.getCoreNetworkPolicy(
            this.ops["GetCoreNetworkPolicy"].apply(partialParams)
        );
    }

    getCustomerGatewayAssociations(partialParams: ToOptional<{
      [K in keyof GetCustomerGatewayAssociationsRequest & keyof GetCustomerGatewayAssociationsRequest]: (GetCustomerGatewayAssociationsRequest & GetCustomerGatewayAssociationsRequest)[K]
    }>): GetCustomerGatewayAssociationsResponse {
        return this.client.getCustomerGatewayAssociations(
            this.ops["GetCustomerGatewayAssociations"].apply(partialParams)
        );
    }

    getDevices(partialParams: ToOptional<{
      [K in keyof GetDevicesRequest & keyof GetDevicesRequest]: (GetDevicesRequest & GetDevicesRequest)[K]
    }>): GetDevicesResponse {
        return this.client.getDevices(
            this.ops["GetDevices"].apply(partialParams)
        );
    }

    getLinkAssociations(partialParams: ToOptional<{
      [K in keyof GetLinkAssociationsRequest & keyof GetLinkAssociationsRequest]: (GetLinkAssociationsRequest & GetLinkAssociationsRequest)[K]
    }>): GetLinkAssociationsResponse {
        return this.client.getLinkAssociations(
            this.ops["GetLinkAssociations"].apply(partialParams)
        );
    }

    getLinks(partialParams: ToOptional<{
      [K in keyof GetLinksRequest & keyof GetLinksRequest]: (GetLinksRequest & GetLinksRequest)[K]
    }>): GetLinksResponse {
        return this.client.getLinks(
            this.ops["GetLinks"].apply(partialParams)
        );
    }

    getNetworkResourceCounts(partialParams: ToOptional<{
      [K in keyof GetNetworkResourceCountsRequest & keyof GetNetworkResourceCountsRequest]: (GetNetworkResourceCountsRequest & GetNetworkResourceCountsRequest)[K]
    }>): GetNetworkResourceCountsResponse {
        return this.client.getNetworkResourceCounts(
            this.ops["GetNetworkResourceCounts"].apply(partialParams)
        );
    }

    getNetworkResourceRelationships(partialParams: ToOptional<{
      [K in keyof GetNetworkResourceRelationshipsRequest & keyof GetNetworkResourceRelationshipsRequest]: (GetNetworkResourceRelationshipsRequest & GetNetworkResourceRelationshipsRequest)[K]
    }>): GetNetworkResourceRelationshipsResponse {
        return this.client.getNetworkResourceRelationships(
            this.ops["GetNetworkResourceRelationships"].apply(partialParams)
        );
    }

    getNetworkResources(partialParams: ToOptional<{
      [K in keyof GetNetworkResourcesRequest & keyof GetNetworkResourcesRequest]: (GetNetworkResourcesRequest & GetNetworkResourcesRequest)[K]
    }>): GetNetworkResourcesResponse {
        return this.client.getNetworkResources(
            this.ops["GetNetworkResources"].apply(partialParams)
        );
    }

    getNetworkRoutes(partialParams: ToOptional<{
      [K in keyof GetNetworkRoutesRequest & keyof GetNetworkRoutesRequest]: (GetNetworkRoutesRequest & GetNetworkRoutesRequest)[K]
    }>): GetNetworkRoutesResponse {
        return this.client.getNetworkRoutes(
            this.ops["GetNetworkRoutes"].apply(partialParams)
        );
    }

    getNetworkTelemetry(partialParams: ToOptional<{
      [K in keyof GetNetworkTelemetryRequest & keyof GetNetworkTelemetryRequest]: (GetNetworkTelemetryRequest & GetNetworkTelemetryRequest)[K]
    }>): GetNetworkTelemetryResponse {
        return this.client.getNetworkTelemetry(
            this.ops["GetNetworkTelemetry"].apply(partialParams)
        );
    }

    getResourcePolicy(partialParams: ToOptional<{
      [K in keyof GetResourcePolicyRequest & keyof GetResourcePolicyRequest]: (GetResourcePolicyRequest & GetResourcePolicyRequest)[K]
    }>): GetResourcePolicyResponse {
        return this.client.getResourcePolicy(
            this.ops["GetResourcePolicy"].apply(partialParams)
        );
    }

    getRouteAnalysis(partialParams: ToOptional<{
      [K in keyof GetRouteAnalysisRequest & keyof GetRouteAnalysisRequest]: (GetRouteAnalysisRequest & GetRouteAnalysisRequest)[K]
    }>): GetRouteAnalysisResponse {
        return this.client.getRouteAnalysis(
            this.ops["GetRouteAnalysis"].apply(partialParams)
        );
    }

    getSiteToSiteVpnAttachment(partialParams: ToOptional<{
      [K in keyof GetSiteToSiteVpnAttachmentRequest & keyof GetSiteToSiteVpnAttachmentRequest]: (GetSiteToSiteVpnAttachmentRequest & GetSiteToSiteVpnAttachmentRequest)[K]
    }>): GetSiteToSiteVpnAttachmentResponse {
        return this.client.getSiteToSiteVpnAttachment(
            this.ops["GetSiteToSiteVpnAttachment"].apply(partialParams)
        );
    }

    getSites(partialParams: ToOptional<{
      [K in keyof GetSitesRequest & keyof GetSitesRequest]: (GetSitesRequest & GetSitesRequest)[K]
    }>): GetSitesResponse {
        return this.client.getSites(
            this.ops["GetSites"].apply(partialParams)
        );
    }

    getTransitGatewayConnectPeerAssociations(partialParams: ToOptional<{
      [K in keyof GetTransitGatewayConnectPeerAssociationsRequest & keyof GetTransitGatewayConnectPeerAssociationsRequest]: (GetTransitGatewayConnectPeerAssociationsRequest & GetTransitGatewayConnectPeerAssociationsRequest)[K]
    }>): GetTransitGatewayConnectPeerAssociationsResponse {
        return this.client.getTransitGatewayConnectPeerAssociations(
            this.ops["GetTransitGatewayConnectPeerAssociations"].apply(partialParams)
        );
    }

    getTransitGatewayRegistrations(partialParams: ToOptional<{
      [K in keyof GetTransitGatewayRegistrationsRequest & keyof GetTransitGatewayRegistrationsRequest]: (GetTransitGatewayRegistrationsRequest & GetTransitGatewayRegistrationsRequest)[K]
    }>): GetTransitGatewayRegistrationsResponse {
        return this.client.getTransitGatewayRegistrations(
            this.ops["GetTransitGatewayRegistrations"].apply(partialParams)
        );
    }

    getVpcAttachment(partialParams: ToOptional<{
      [K in keyof GetVpcAttachmentRequest & keyof GetVpcAttachmentRequest]: (GetVpcAttachmentRequest & GetVpcAttachmentRequest)[K]
    }>): GetVpcAttachmentResponse {
        return this.client.getVpcAttachment(
            this.ops["GetVpcAttachment"].apply(partialParams)
        );
    }

    listCoreNetworkPolicyVersions(partialParams: ToOptional<{
      [K in keyof ListCoreNetworkPolicyVersionsRequest & keyof ListCoreNetworkPolicyVersionsRequest]: (ListCoreNetworkPolicyVersionsRequest & ListCoreNetworkPolicyVersionsRequest)[K]
    }>): ListCoreNetworkPolicyVersionsResponse {
        return this.client.listCoreNetworkPolicyVersions(
            this.ops["ListCoreNetworkPolicyVersions"].apply(partialParams)
        );
    }

    listTagsForResource(partialParams: ToOptional<{
      [K in keyof ListTagsForResourceRequest & keyof ListTagsForResourceRequest]: (ListTagsForResourceRequest & ListTagsForResourceRequest)[K]
    }>): ListTagsForResourceResponse {
        return this.client.listTagsForResource(
            this.ops["ListTagsForResource"].apply(partialParams)
        );
    }

    putCoreNetworkPolicy(partialParams: ToOptional<{
      [K in keyof PutCoreNetworkPolicyRequest & keyof PutCoreNetworkPolicyRequest]: (PutCoreNetworkPolicyRequest & PutCoreNetworkPolicyRequest)[K]
    }>): PutCoreNetworkPolicyResponse {
        return this.client.putCoreNetworkPolicy(
            this.ops["PutCoreNetworkPolicy"].apply(partialParams)
        );
    }

    putResourcePolicy(partialParams: ToOptional<{
      [K in keyof PutResourcePolicyRequest & keyof PutResourcePolicyRequest]: (PutResourcePolicyRequest & PutResourcePolicyRequest)[K]
    }>): PutResourcePolicyResponse {
        return this.client.putResourcePolicy(
            this.ops["PutResourcePolicy"].apply(partialParams)
        );
    }

    registerTransitGateway(partialParams: ToOptional<{
      [K in keyof RegisterTransitGatewayRequest & keyof RegisterTransitGatewayRequest]: (RegisterTransitGatewayRequest & RegisterTransitGatewayRequest)[K]
    }>): RegisterTransitGatewayResponse {
        return this.client.registerTransitGateway(
            this.ops["RegisterTransitGateway"].apply(partialParams)
        );
    }

    rejectAttachment(partialParams: ToOptional<{
      [K in keyof RejectAttachmentRequest & keyof RejectAttachmentRequest]: (RejectAttachmentRequest & RejectAttachmentRequest)[K]
    }>): RejectAttachmentResponse {
        return this.client.rejectAttachment(
            this.ops["RejectAttachment"].apply(partialParams)
        );
    }

    restoreCoreNetworkPolicyVersion(partialParams: ToOptional<{
      [K in keyof RestoreCoreNetworkPolicyVersionRequest & keyof RestoreCoreNetworkPolicyVersionRequest]: (RestoreCoreNetworkPolicyVersionRequest & RestoreCoreNetworkPolicyVersionRequest)[K]
    }>): RestoreCoreNetworkPolicyVersionResponse {
        return this.client.restoreCoreNetworkPolicyVersion(
            this.ops["RestoreCoreNetworkPolicyVersion"].apply(partialParams)
        );
    }

    startRouteAnalysis(partialParams: ToOptional<{
      [K in keyof StartRouteAnalysisRequest & keyof StartRouteAnalysisRequest]: (StartRouteAnalysisRequest & StartRouteAnalysisRequest)[K]
    }>): StartRouteAnalysisResponse {
        return this.client.startRouteAnalysis(
            this.ops["StartRouteAnalysis"].apply(partialParams)
        );
    }

    tagResource(partialParams: ToOptional<{
      [K in keyof TagResourceRequest & keyof TagResourceRequest]: (TagResourceRequest & TagResourceRequest)[K]
    }>): TagResourceResponse {
        return this.client.tagResource(
            this.ops["TagResource"].apply(partialParams)
        );
    }

    untagResource(partialParams: ToOptional<{
      [K in keyof UntagResourceRequest & keyof UntagResourceRequest]: (UntagResourceRequest & UntagResourceRequest)[K]
    }>): UntagResourceResponse {
        return this.client.untagResource(
            this.ops["UntagResource"].apply(partialParams)
        );
    }

    updateConnection(partialParams: ToOptional<{
      [K in keyof UpdateConnectionRequest & keyof UpdateConnectionRequest]: (UpdateConnectionRequest & UpdateConnectionRequest)[K]
    }>): UpdateConnectionResponse {
        return this.client.updateConnection(
            this.ops["UpdateConnection"].apply(partialParams)
        );
    }

    updateCoreNetwork(partialParams: ToOptional<{
      [K in keyof UpdateCoreNetworkRequest & keyof UpdateCoreNetworkRequest]: (UpdateCoreNetworkRequest & UpdateCoreNetworkRequest)[K]
    }>): UpdateCoreNetworkResponse {
        return this.client.updateCoreNetwork(
            this.ops["UpdateCoreNetwork"].apply(partialParams)
        );
    }

    updateDevice(partialParams: ToOptional<{
      [K in keyof UpdateDeviceRequest & keyof UpdateDeviceRequest]: (UpdateDeviceRequest & UpdateDeviceRequest)[K]
    }>): UpdateDeviceResponse {
        return this.client.updateDevice(
            this.ops["UpdateDevice"].apply(partialParams)
        );
    }

    updateGlobalNetwork(partialParams: ToOptional<{
      [K in keyof UpdateGlobalNetworkRequest & keyof UpdateGlobalNetworkRequest]: (UpdateGlobalNetworkRequest & UpdateGlobalNetworkRequest)[K]
    }>): UpdateGlobalNetworkResponse {
        return this.client.updateGlobalNetwork(
            this.ops["UpdateGlobalNetwork"].apply(partialParams)
        );
    }

    updateLink(partialParams: ToOptional<{
      [K in keyof UpdateLinkRequest & keyof UpdateLinkRequest]: (UpdateLinkRequest & UpdateLinkRequest)[K]
    }>): UpdateLinkResponse {
        return this.client.updateLink(
            this.ops["UpdateLink"].apply(partialParams)
        );
    }

    updateNetworkResourceMetadata(partialParams: ToOptional<{
      [K in keyof UpdateNetworkResourceMetadataRequest & keyof UpdateNetworkResourceMetadataRequest]: (UpdateNetworkResourceMetadataRequest & UpdateNetworkResourceMetadataRequest)[K]
    }>): UpdateNetworkResourceMetadataResponse {
        return this.client.updateNetworkResourceMetadata(
            this.ops["UpdateNetworkResourceMetadata"].apply(partialParams)
        );
    }

    updateSite(partialParams: ToOptional<{
      [K in keyof UpdateSiteRequest & keyof UpdateSiteRequest]: (UpdateSiteRequest & UpdateSiteRequest)[K]
    }>): UpdateSiteResponse {
        return this.client.updateSite(
            this.ops["UpdateSite"].apply(partialParams)
        );
    }

    updateVpcAttachment(partialParams: ToOptional<{
      [K in keyof UpdateVpcAttachmentRequest & keyof UpdateVpcAttachmentRequest]: (UpdateVpcAttachmentRequest & UpdateVpcAttachmentRequest)[K]
    }>): UpdateVpcAttachmentResponse {
        return this.client.updateVpcAttachment(
            this.ops["UpdateVpcAttachment"].apply(partialParams)
        );
    }
}