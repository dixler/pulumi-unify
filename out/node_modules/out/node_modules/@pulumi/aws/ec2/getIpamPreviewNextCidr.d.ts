import * as pulumi from "@pulumi/pulumi";
export declare function getIpamPreviewNextCidr(args: GetIpamPreviewNextCidrArgs, opts?: pulumi.InvokeOptions): Promise<GetIpamPreviewNextCidrResult>;
/**
 * A collection of arguments for invoking getIpamPreviewNextCidr.
 */
export interface GetIpamPreviewNextCidrArgs {
    /**
     * Exclude a particular CIDR range from being returned by the pool.
     */
    disallowedCidrs?: string[];
    /**
     * The ID of the pool to which you want to assign a CIDR.
     */
    ipamPoolId: string;
    /**
     * The netmask length of the CIDR you would like to preview from the IPAM pool.
     */
    netmaskLength?: number;
}
/**
 * A collection of values returned by getIpamPreviewNextCidr.
 */
export interface GetIpamPreviewNextCidrResult {
    /**
     * The previewed CIDR from the pool.
     */
    readonly cidr: string;
    readonly disallowedCidrs?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipamPoolId: string;
    readonly netmaskLength?: number;
}
export declare function getIpamPreviewNextCidrOutput(args: GetIpamPreviewNextCidrOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIpamPreviewNextCidrResult>;
/**
 * A collection of arguments for invoking getIpamPreviewNextCidr.
 */
export interface GetIpamPreviewNextCidrOutputArgs {
    /**
     * Exclude a particular CIDR range from being returned by the pool.
     */
    disallowedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the pool to which you want to assign a CIDR.
     */
    ipamPoolId: pulumi.Input<string>;
    /**
     * The netmask length of the CIDR you would like to preview from the IPAM pool.
     */
    netmaskLength?: pulumi.Input<number>;
}
