
import * as aws from "@pulumi/aws";
import * as awssdk from "aws-sdk";
import {
    AcceptDomainTransferFromAnotherAwsAccountRequest,
    CancelDomainTransferToAnotherAwsAccountRequest,
    CheckDomainAvailabilityRequest,
    CheckDomainTransferabilityRequest,
    DeleteDomainRequest,
    DeleteTagsForDomainRequest,
    DisableDomainAutoRenewRequest,
    DisableDomainTransferLockRequest,
    EnableDomainAutoRenewRequest,
    EnableDomainTransferLockRequest,
    GetDomainDetailRequest,
    GetDomainSuggestionsRequest,
    GetOperationDetailRequest,
    ListTagsForDomainRequest,
    RegisterDomainRequest,
    RejectDomainTransferFromAnotherAwsAccountRequest,
    RenewDomainRequest,
    RetrieveDomainAuthCodeRequest,
    TransferDomainRequest,
    TransferDomainToAnotherAwsAccountRequest,
    UpdateDomainContactRequest,
    UpdateDomainContactPrivacyRequest,
    UpdateDomainNameserversRequest,
    UpdateTagsForDomainRequest,
    AcceptDomainTransferFromAnotherAwsAccountResponse,
    CancelDomainTransferToAnotherAwsAccountResponse,
    CheckDomainAvailabilityResponse,
    CheckDomainTransferabilityResponse,
    DeleteDomainResponse,
    DeleteTagsForDomainResponse,
    DisableDomainAutoRenewResponse,
    DisableDomainTransferLockResponse,
    EnableDomainAutoRenewResponse,
    EnableDomainTransferLockResponse,
    GetDomainDetailResponse,
    GetDomainSuggestionsResponse,
    GetOperationDetailResponse,
    ListTagsForDomainResponse,
    RegisterDomainResponse,
    RejectDomainTransferFromAnotherAwsAccountResponse,
    RenewDomainResponse,
    RetrieveDomainAuthCodeResponse,
    TransferDomainResponse,
    TransferDomainToAnotherAwsAccountResponse,
    UpdateDomainContactResponse,
    UpdateDomainContactPrivacyResponse,
    UpdateDomainNameserversResponse,
    UpdateTagsForDomainResponse
} from "aws-sdk/clients/route 53 domains";

import {getResourceOperations} from "../parse";

type UndefinedProperties<T> = {
    [P in keyof T]-?: undefined extends T[P] ? P : never
}[keyof T]

type ToOptional<T> = Partial<Pick<T, UndefinedProperties<T>>> & Pick<T, Exclude<keyof T, UndefinedProperties<T>>>

export default class Resource extends aws.route53domains.RegisteredDomain {
    private ops: any
    private client: any
    constructor(...args: ConstructorParameters<typeof aws.route53domains.RegisteredDomain>) {
        super(...args)
        this.client = new awssdk.Route53Domains()
        this.ops = getResourceOperations(this as any, require("../../aws-sdk-js/apis/route53domains-2014-05-15.normal.json"), this.client)
    }

    acceptDomainTransferFromAnotherAwsAccount(partialParams: ToOptional<{
      [K in keyof AcceptDomainTransferFromAnotherAwsAccountRequest & keyof AcceptDomainTransferFromAnotherAwsAccountRequest & keyof AcceptDomainTransferFromAnotherAwsAccountRequest & keyof AcceptDomainTransferFromAnotherAwsAccountRequest & keyof AcceptDomainTransferFromAnotherAwsAccountRequest & keyof AcceptDomainTransferFromAnotherAwsAccountRequest & keyof AcceptDomainTransferFromAnotherAwsAccountRequest & keyof AcceptDomainTransferFromAnotherAwsAccountRequest & keyof AcceptDomainTransferFromAnotherAwsAccountRequest & keyof AcceptDomainTransferFromAnotherAwsAccountRequest]: (AcceptDomainTransferFromAnotherAwsAccountRequest & AcceptDomainTransferFromAnotherAwsAccountRequest & AcceptDomainTransferFromAnotherAwsAccountRequest & AcceptDomainTransferFromAnotherAwsAccountRequest & AcceptDomainTransferFromAnotherAwsAccountRequest & AcceptDomainTransferFromAnotherAwsAccountRequest & AcceptDomainTransferFromAnotherAwsAccountRequest & AcceptDomainTransferFromAnotherAwsAccountRequest & AcceptDomainTransferFromAnotherAwsAccountRequest & AcceptDomainTransferFromAnotherAwsAccountRequest)[K]
    }>): AcceptDomainTransferFromAnotherAwsAccountResponse {
        return this.client.acceptDomainTransferFromAnotherAwsAccount(
            this.ops["AcceptDomainTransferFromAnotherAwsAccount"].apply(partialParams)
        );
    }

    cancelDomainTransferToAnotherAwsAccount(partialParams: ToOptional<{
      [K in keyof CancelDomainTransferToAnotherAwsAccountRequest & keyof CancelDomainTransferToAnotherAwsAccountRequest & keyof CancelDomainTransferToAnotherAwsAccountRequest & keyof CancelDomainTransferToAnotherAwsAccountRequest & keyof CancelDomainTransferToAnotherAwsAccountRequest & keyof CancelDomainTransferToAnotherAwsAccountRequest & keyof CancelDomainTransferToAnotherAwsAccountRequest & keyof CancelDomainTransferToAnotherAwsAccountRequest & keyof CancelDomainTransferToAnotherAwsAccountRequest & keyof CancelDomainTransferToAnotherAwsAccountRequest]: (CancelDomainTransferToAnotherAwsAccountRequest & CancelDomainTransferToAnotherAwsAccountRequest & CancelDomainTransferToAnotherAwsAccountRequest & CancelDomainTransferToAnotherAwsAccountRequest & CancelDomainTransferToAnotherAwsAccountRequest & CancelDomainTransferToAnotherAwsAccountRequest & CancelDomainTransferToAnotherAwsAccountRequest & CancelDomainTransferToAnotherAwsAccountRequest & CancelDomainTransferToAnotherAwsAccountRequest & CancelDomainTransferToAnotherAwsAccountRequest)[K]
    }>): CancelDomainTransferToAnotherAwsAccountResponse {
        return this.client.cancelDomainTransferToAnotherAwsAccount(
            this.ops["CancelDomainTransferToAnotherAwsAccount"].apply(partialParams)
        );
    }

    checkDomainAvailability(partialParams: ToOptional<{
      [K in keyof CheckDomainAvailabilityRequest & keyof CheckDomainAvailabilityRequest & keyof CheckDomainAvailabilityRequest & keyof CheckDomainAvailabilityRequest & keyof CheckDomainAvailabilityRequest & keyof CheckDomainAvailabilityRequest & keyof CheckDomainAvailabilityRequest & keyof CheckDomainAvailabilityRequest & keyof CheckDomainAvailabilityRequest & keyof CheckDomainAvailabilityRequest]: (CheckDomainAvailabilityRequest & CheckDomainAvailabilityRequest & CheckDomainAvailabilityRequest & CheckDomainAvailabilityRequest & CheckDomainAvailabilityRequest & CheckDomainAvailabilityRequest & CheckDomainAvailabilityRequest & CheckDomainAvailabilityRequest & CheckDomainAvailabilityRequest & CheckDomainAvailabilityRequest)[K]
    }>): CheckDomainAvailabilityResponse {
        return this.client.checkDomainAvailability(
            this.ops["CheckDomainAvailability"].apply(partialParams)
        );
    }

    checkDomainTransferability(partialParams: ToOptional<{
      [K in keyof CheckDomainTransferabilityRequest & keyof CheckDomainTransferabilityRequest & keyof CheckDomainTransferabilityRequest & keyof CheckDomainTransferabilityRequest & keyof CheckDomainTransferabilityRequest & keyof CheckDomainTransferabilityRequest & keyof CheckDomainTransferabilityRequest & keyof CheckDomainTransferabilityRequest & keyof CheckDomainTransferabilityRequest & keyof CheckDomainTransferabilityRequest]: (CheckDomainTransferabilityRequest & CheckDomainTransferabilityRequest & CheckDomainTransferabilityRequest & CheckDomainTransferabilityRequest & CheckDomainTransferabilityRequest & CheckDomainTransferabilityRequest & CheckDomainTransferabilityRequest & CheckDomainTransferabilityRequest & CheckDomainTransferabilityRequest & CheckDomainTransferabilityRequest)[K]
    }>): CheckDomainTransferabilityResponse {
        return this.client.checkDomainTransferability(
            this.ops["CheckDomainTransferability"].apply(partialParams)
        );
    }

    deleteDomain(partialParams: ToOptional<{
      [K in keyof DeleteDomainRequest & keyof DeleteDomainRequest & keyof DeleteDomainRequest & keyof DeleteDomainRequest & keyof DeleteDomainRequest & keyof DeleteDomainRequest & keyof DeleteDomainRequest & keyof DeleteDomainRequest & keyof DeleteDomainRequest & keyof DeleteDomainRequest]: (DeleteDomainRequest & DeleteDomainRequest & DeleteDomainRequest & DeleteDomainRequest & DeleteDomainRequest & DeleteDomainRequest & DeleteDomainRequest & DeleteDomainRequest & DeleteDomainRequest & DeleteDomainRequest)[K]
    }>): DeleteDomainResponse {
        return this.client.deleteDomain(
            this.ops["DeleteDomain"].apply(partialParams)
        );
    }

    deleteTagsForDomain(partialParams: ToOptional<{
      [K in keyof DeleteTagsForDomainRequest & keyof DeleteTagsForDomainRequest & keyof DeleteTagsForDomainRequest & keyof DeleteTagsForDomainRequest & keyof DeleteTagsForDomainRequest & keyof DeleteTagsForDomainRequest & keyof DeleteTagsForDomainRequest & keyof DeleteTagsForDomainRequest & keyof DeleteTagsForDomainRequest & keyof DeleteTagsForDomainRequest]: (DeleteTagsForDomainRequest & DeleteTagsForDomainRequest & DeleteTagsForDomainRequest & DeleteTagsForDomainRequest & DeleteTagsForDomainRequest & DeleteTagsForDomainRequest & DeleteTagsForDomainRequest & DeleteTagsForDomainRequest & DeleteTagsForDomainRequest & DeleteTagsForDomainRequest)[K]
    }>): DeleteTagsForDomainResponse {
        return this.client.deleteTagsForDomain(
            this.ops["DeleteTagsForDomain"].apply(partialParams)
        );
    }

    disableDomainAutoRenew(partialParams: ToOptional<{
      [K in keyof DisableDomainAutoRenewRequest & keyof DisableDomainAutoRenewRequest & keyof DisableDomainAutoRenewRequest & keyof DisableDomainAutoRenewRequest & keyof DisableDomainAutoRenewRequest & keyof DisableDomainAutoRenewRequest & keyof DisableDomainAutoRenewRequest & keyof DisableDomainAutoRenewRequest & keyof DisableDomainAutoRenewRequest & keyof DisableDomainAutoRenewRequest]: (DisableDomainAutoRenewRequest & DisableDomainAutoRenewRequest & DisableDomainAutoRenewRequest & DisableDomainAutoRenewRequest & DisableDomainAutoRenewRequest & DisableDomainAutoRenewRequest & DisableDomainAutoRenewRequest & DisableDomainAutoRenewRequest & DisableDomainAutoRenewRequest & DisableDomainAutoRenewRequest)[K]
    }>): DisableDomainAutoRenewResponse {
        return this.client.disableDomainAutoRenew(
            this.ops["DisableDomainAutoRenew"].apply(partialParams)
        );
    }

    disableDomainTransferLock(partialParams: ToOptional<{
      [K in keyof DisableDomainTransferLockRequest & keyof DisableDomainTransferLockRequest & keyof DisableDomainTransferLockRequest & keyof DisableDomainTransferLockRequest & keyof DisableDomainTransferLockRequest & keyof DisableDomainTransferLockRequest & keyof DisableDomainTransferLockRequest & keyof DisableDomainTransferLockRequest & keyof DisableDomainTransferLockRequest & keyof DisableDomainTransferLockRequest]: (DisableDomainTransferLockRequest & DisableDomainTransferLockRequest & DisableDomainTransferLockRequest & DisableDomainTransferLockRequest & DisableDomainTransferLockRequest & DisableDomainTransferLockRequest & DisableDomainTransferLockRequest & DisableDomainTransferLockRequest & DisableDomainTransferLockRequest & DisableDomainTransferLockRequest)[K]
    }>): DisableDomainTransferLockResponse {
        return this.client.disableDomainTransferLock(
            this.ops["DisableDomainTransferLock"].apply(partialParams)
        );
    }

    enableDomainAutoRenew(partialParams: ToOptional<{
      [K in keyof EnableDomainAutoRenewRequest & keyof EnableDomainAutoRenewRequest & keyof EnableDomainAutoRenewRequest & keyof Omit<EnableDomainAutoRenewRequest, "DomainName"> & keyof EnableDomainAutoRenewRequest & keyof EnableDomainAutoRenewRequest & keyof EnableDomainAutoRenewRequest & keyof EnableDomainAutoRenewRequest & keyof EnableDomainAutoRenewRequest & keyof EnableDomainAutoRenewRequest]: (EnableDomainAutoRenewRequest & EnableDomainAutoRenewRequest & EnableDomainAutoRenewRequest & Omit<EnableDomainAutoRenewRequest, "DomainName"> & EnableDomainAutoRenewRequest & EnableDomainAutoRenewRequest & EnableDomainAutoRenewRequest & EnableDomainAutoRenewRequest & EnableDomainAutoRenewRequest & EnableDomainAutoRenewRequest)[K]
    }>): EnableDomainAutoRenewResponse {
        return this.client.enableDomainAutoRenew(
            this.ops["EnableDomainAutoRenew"].apply(partialParams)
        );
    }

    enableDomainTransferLock(partialParams: ToOptional<{
      [K in keyof EnableDomainTransferLockRequest & keyof EnableDomainTransferLockRequest & keyof EnableDomainTransferLockRequest & keyof Omit<EnableDomainTransferLockRequest, "DomainName"> & keyof EnableDomainTransferLockRequest & keyof EnableDomainTransferLockRequest & keyof EnableDomainTransferLockRequest & keyof EnableDomainTransferLockRequest & keyof EnableDomainTransferLockRequest & keyof EnableDomainTransferLockRequest]: (EnableDomainTransferLockRequest & EnableDomainTransferLockRequest & EnableDomainTransferLockRequest & Omit<EnableDomainTransferLockRequest, "DomainName"> & EnableDomainTransferLockRequest & EnableDomainTransferLockRequest & EnableDomainTransferLockRequest & EnableDomainTransferLockRequest & EnableDomainTransferLockRequest & EnableDomainTransferLockRequest)[K]
    }>): EnableDomainTransferLockResponse {
        return this.client.enableDomainTransferLock(
            this.ops["EnableDomainTransferLock"].apply(partialParams)
        );
    }

    getDomainDetail(partialParams: ToOptional<{
      [K in keyof GetDomainDetailRequest & keyof GetDomainDetailRequest & keyof GetDomainDetailRequest & keyof Omit<GetDomainDetailRequest, "DomainName"> & keyof GetDomainDetailRequest & keyof GetDomainDetailRequest & keyof GetDomainDetailRequest & keyof GetDomainDetailRequest & keyof GetDomainDetailRequest & keyof GetDomainDetailRequest]: (GetDomainDetailRequest & GetDomainDetailRequest & GetDomainDetailRequest & Omit<GetDomainDetailRequest, "DomainName"> & GetDomainDetailRequest & GetDomainDetailRequest & GetDomainDetailRequest & GetDomainDetailRequest & GetDomainDetailRequest & GetDomainDetailRequest)[K]
    }>): GetDomainDetailResponse {
        return this.client.getDomainDetail(
            this.ops["GetDomainDetail"].apply(partialParams)
        );
    }

    getDomainSuggestions(partialParams: ToOptional<{
      [K in keyof GetDomainSuggestionsRequest & keyof GetDomainSuggestionsRequest & keyof GetDomainSuggestionsRequest & keyof Omit<GetDomainSuggestionsRequest, "DomainName"> & keyof GetDomainSuggestionsRequest & keyof GetDomainSuggestionsRequest & keyof GetDomainSuggestionsRequest & keyof GetDomainSuggestionsRequest & keyof GetDomainSuggestionsRequest & keyof GetDomainSuggestionsRequest]: (GetDomainSuggestionsRequest & GetDomainSuggestionsRequest & GetDomainSuggestionsRequest & Omit<GetDomainSuggestionsRequest, "DomainName"> & GetDomainSuggestionsRequest & GetDomainSuggestionsRequest & GetDomainSuggestionsRequest & GetDomainSuggestionsRequest & GetDomainSuggestionsRequest & GetDomainSuggestionsRequest)[K]
    }>): GetDomainSuggestionsResponse {
        return this.client.getDomainSuggestions(
            this.ops["GetDomainSuggestions"].apply(partialParams)
        );
    }

    getOperationDetail(partialParams: ToOptional<{
      [K in keyof GetOperationDetailRequest & keyof GetOperationDetailRequest & keyof GetOperationDetailRequest & keyof GetOperationDetailRequest & keyof GetOperationDetailRequest & keyof GetOperationDetailRequest & keyof GetOperationDetailRequest & keyof GetOperationDetailRequest & keyof GetOperationDetailRequest & keyof GetOperationDetailRequest]: (GetOperationDetailRequest & GetOperationDetailRequest & GetOperationDetailRequest & GetOperationDetailRequest & GetOperationDetailRequest & GetOperationDetailRequest & GetOperationDetailRequest & GetOperationDetailRequest & GetOperationDetailRequest & GetOperationDetailRequest)[K]
    }>): GetOperationDetailResponse {
        return this.client.getOperationDetail(
            this.ops["GetOperationDetail"].apply(partialParams)
        );
    }

    listTagsForDomain(partialParams: ToOptional<{
      [K in keyof ListTagsForDomainRequest & keyof ListTagsForDomainRequest & keyof ListTagsForDomainRequest & keyof Omit<ListTagsForDomainRequest, "DomainName"> & keyof ListTagsForDomainRequest & keyof ListTagsForDomainRequest & keyof ListTagsForDomainRequest & keyof ListTagsForDomainRequest & keyof ListTagsForDomainRequest & keyof ListTagsForDomainRequest]: (ListTagsForDomainRequest & ListTagsForDomainRequest & ListTagsForDomainRequest & Omit<ListTagsForDomainRequest, "DomainName"> & ListTagsForDomainRequest & ListTagsForDomainRequest & ListTagsForDomainRequest & ListTagsForDomainRequest & ListTagsForDomainRequest & ListTagsForDomainRequest)[K]
    }>): ListTagsForDomainResponse {
        return this.client.listTagsForDomain(
            this.ops["ListTagsForDomain"].apply(partialParams)
        );
    }

    registerDomain(partialParams: ToOptional<{
      [K in keyof RegisterDomainRequest & keyof RegisterDomainRequest & keyof RegisterDomainRequest & keyof Omit<RegisterDomainRequest, "DomainName"> & keyof RegisterDomainRequest & keyof RegisterDomainRequest & keyof RegisterDomainRequest & keyof RegisterDomainRequest & keyof RegisterDomainRequest & keyof RegisterDomainRequest]: (RegisterDomainRequest & RegisterDomainRequest & RegisterDomainRequest & Omit<RegisterDomainRequest, "DomainName"> & RegisterDomainRequest & RegisterDomainRequest & RegisterDomainRequest & RegisterDomainRequest & RegisterDomainRequest & RegisterDomainRequest)[K]
    }>): RegisterDomainResponse {
        return this.client.registerDomain(
            this.ops["RegisterDomain"].apply(partialParams)
        );
    }

    rejectDomainTransferFromAnotherAwsAccount(partialParams: ToOptional<{
      [K in keyof RejectDomainTransferFromAnotherAwsAccountRequest & keyof RejectDomainTransferFromAnotherAwsAccountRequest & keyof RejectDomainTransferFromAnotherAwsAccountRequest & keyof Omit<RejectDomainTransferFromAnotherAwsAccountRequest, "DomainName"> & keyof RejectDomainTransferFromAnotherAwsAccountRequest & keyof RejectDomainTransferFromAnotherAwsAccountRequest & keyof RejectDomainTransferFromAnotherAwsAccountRequest & keyof RejectDomainTransferFromAnotherAwsAccountRequest & keyof RejectDomainTransferFromAnotherAwsAccountRequest & keyof RejectDomainTransferFromAnotherAwsAccountRequest]: (RejectDomainTransferFromAnotherAwsAccountRequest & RejectDomainTransferFromAnotherAwsAccountRequest & RejectDomainTransferFromAnotherAwsAccountRequest & Omit<RejectDomainTransferFromAnotherAwsAccountRequest, "DomainName"> & RejectDomainTransferFromAnotherAwsAccountRequest & RejectDomainTransferFromAnotherAwsAccountRequest & RejectDomainTransferFromAnotherAwsAccountRequest & RejectDomainTransferFromAnotherAwsAccountRequest & RejectDomainTransferFromAnotherAwsAccountRequest & RejectDomainTransferFromAnotherAwsAccountRequest)[K]
    }>): RejectDomainTransferFromAnotherAwsAccountResponse {
        return this.client.rejectDomainTransferFromAnotherAwsAccount(
            this.ops["RejectDomainTransferFromAnotherAwsAccount"].apply(partialParams)
        );
    }

    renewDomain(partialParams: ToOptional<{
      [K in keyof RenewDomainRequest & keyof RenewDomainRequest & keyof RenewDomainRequest & keyof Omit<RenewDomainRequest, "DomainName"> & keyof RenewDomainRequest & keyof RenewDomainRequest & keyof RenewDomainRequest & keyof RenewDomainRequest & keyof RenewDomainRequest & keyof RenewDomainRequest]: (RenewDomainRequest & RenewDomainRequest & RenewDomainRequest & Omit<RenewDomainRequest, "DomainName"> & RenewDomainRequest & RenewDomainRequest & RenewDomainRequest & RenewDomainRequest & RenewDomainRequest & RenewDomainRequest)[K]
    }>): RenewDomainResponse {
        return this.client.renewDomain(
            this.ops["RenewDomain"].apply(partialParams)
        );
    }

    retrieveDomainAuthCode(partialParams: ToOptional<{
      [K in keyof RetrieveDomainAuthCodeRequest & keyof RetrieveDomainAuthCodeRequest & keyof RetrieveDomainAuthCodeRequest & keyof Omit<RetrieveDomainAuthCodeRequest, "DomainName"> & keyof RetrieveDomainAuthCodeRequest & keyof RetrieveDomainAuthCodeRequest & keyof RetrieveDomainAuthCodeRequest & keyof RetrieveDomainAuthCodeRequest & keyof RetrieveDomainAuthCodeRequest & keyof RetrieveDomainAuthCodeRequest]: (RetrieveDomainAuthCodeRequest & RetrieveDomainAuthCodeRequest & RetrieveDomainAuthCodeRequest & Omit<RetrieveDomainAuthCodeRequest, "DomainName"> & RetrieveDomainAuthCodeRequest & RetrieveDomainAuthCodeRequest & RetrieveDomainAuthCodeRequest & RetrieveDomainAuthCodeRequest & RetrieveDomainAuthCodeRequest & RetrieveDomainAuthCodeRequest)[K]
    }>): RetrieveDomainAuthCodeResponse {
        return this.client.retrieveDomainAuthCode(
            this.ops["RetrieveDomainAuthCode"].apply(partialParams)
        );
    }

    transferDomain(partialParams: ToOptional<{
      [K in keyof TransferDomainRequest & keyof TransferDomainRequest & keyof TransferDomainRequest & keyof Omit<TransferDomainRequest, "DomainName"> & keyof TransferDomainRequest & keyof TransferDomainRequest & keyof TransferDomainRequest & keyof TransferDomainRequest & keyof TransferDomainRequest & keyof TransferDomainRequest]: (TransferDomainRequest & TransferDomainRequest & TransferDomainRequest & Omit<TransferDomainRequest, "DomainName"> & TransferDomainRequest & TransferDomainRequest & TransferDomainRequest & TransferDomainRequest & TransferDomainRequest & TransferDomainRequest)[K]
    }>): TransferDomainResponse {
        return this.client.transferDomain(
            this.ops["TransferDomain"].apply(partialParams)
        );
    }

    transferDomainToAnotherAwsAccount(partialParams: ToOptional<{
      [K in keyof TransferDomainToAnotherAwsAccountRequest & keyof TransferDomainToAnotherAwsAccountRequest & keyof TransferDomainToAnotherAwsAccountRequest & keyof Omit<TransferDomainToAnotherAwsAccountRequest, "DomainName"> & keyof TransferDomainToAnotherAwsAccountRequest & keyof TransferDomainToAnotherAwsAccountRequest & keyof TransferDomainToAnotherAwsAccountRequest & keyof TransferDomainToAnotherAwsAccountRequest & keyof TransferDomainToAnotherAwsAccountRequest & keyof TransferDomainToAnotherAwsAccountRequest]: (TransferDomainToAnotherAwsAccountRequest & TransferDomainToAnotherAwsAccountRequest & TransferDomainToAnotherAwsAccountRequest & Omit<TransferDomainToAnotherAwsAccountRequest, "DomainName"> & TransferDomainToAnotherAwsAccountRequest & TransferDomainToAnotherAwsAccountRequest & TransferDomainToAnotherAwsAccountRequest & TransferDomainToAnotherAwsAccountRequest & TransferDomainToAnotherAwsAccountRequest & TransferDomainToAnotherAwsAccountRequest)[K]
    }>): TransferDomainToAnotherAwsAccountResponse {
        return this.client.transferDomainToAnotherAwsAccount(
            this.ops["TransferDomainToAnotherAwsAccount"].apply(partialParams)
        );
    }

    updateDomainContact(partialParams: ToOptional<{
      [K in keyof UpdateDomainContactRequest & keyof UpdateDomainContactRequest & keyof UpdateDomainContactRequest & keyof Omit<UpdateDomainContactRequest, "DomainName"> & keyof UpdateDomainContactRequest & keyof UpdateDomainContactRequest & keyof UpdateDomainContactRequest & keyof UpdateDomainContactRequest & keyof UpdateDomainContactRequest & keyof UpdateDomainContactRequest]: (UpdateDomainContactRequest & UpdateDomainContactRequest & UpdateDomainContactRequest & Omit<UpdateDomainContactRequest, "DomainName"> & UpdateDomainContactRequest & UpdateDomainContactRequest & UpdateDomainContactRequest & UpdateDomainContactRequest & UpdateDomainContactRequest & UpdateDomainContactRequest)[K]
    }>): UpdateDomainContactResponse {
        return this.client.updateDomainContact(
            this.ops["UpdateDomainContact"].apply(partialParams)
        );
    }

    updateDomainContactPrivacy(partialParams: ToOptional<{
      [K in keyof UpdateDomainContactPrivacyRequest & keyof UpdateDomainContactPrivacyRequest & keyof UpdateDomainContactPrivacyRequest & keyof Omit<UpdateDomainContactPrivacyRequest, "DomainName"> & keyof UpdateDomainContactPrivacyRequest & keyof UpdateDomainContactPrivacyRequest & keyof UpdateDomainContactPrivacyRequest & keyof UpdateDomainContactPrivacyRequest & keyof UpdateDomainContactPrivacyRequest & keyof UpdateDomainContactPrivacyRequest]: (UpdateDomainContactPrivacyRequest & UpdateDomainContactPrivacyRequest & UpdateDomainContactPrivacyRequest & Omit<UpdateDomainContactPrivacyRequest, "DomainName"> & UpdateDomainContactPrivacyRequest & UpdateDomainContactPrivacyRequest & UpdateDomainContactPrivacyRequest & UpdateDomainContactPrivacyRequest & UpdateDomainContactPrivacyRequest & UpdateDomainContactPrivacyRequest)[K]
    }>): UpdateDomainContactPrivacyResponse {
        return this.client.updateDomainContactPrivacy(
            this.ops["UpdateDomainContactPrivacy"].apply(partialParams)
        );
    }

    updateDomainNameservers(partialParams: ToOptional<{
      [K in keyof UpdateDomainNameserversRequest & keyof UpdateDomainNameserversRequest & keyof UpdateDomainNameserversRequest & keyof Omit<UpdateDomainNameserversRequest, "DomainName"> & keyof UpdateDomainNameserversRequest & keyof UpdateDomainNameserversRequest & keyof UpdateDomainNameserversRequest & keyof UpdateDomainNameserversRequest & keyof UpdateDomainNameserversRequest & keyof UpdateDomainNameserversRequest]: (UpdateDomainNameserversRequest & UpdateDomainNameserversRequest & UpdateDomainNameserversRequest & Omit<UpdateDomainNameserversRequest, "DomainName"> & UpdateDomainNameserversRequest & UpdateDomainNameserversRequest & UpdateDomainNameserversRequest & UpdateDomainNameserversRequest & UpdateDomainNameserversRequest & UpdateDomainNameserversRequest)[K]
    }>): UpdateDomainNameserversResponse {
        return this.client.updateDomainNameservers(
            this.ops["UpdateDomainNameservers"].apply(partialParams)
        );
    }

    updateTagsForDomain(partialParams: ToOptional<{
      [K in keyof UpdateTagsForDomainRequest & keyof UpdateTagsForDomainRequest & keyof UpdateTagsForDomainRequest & keyof Omit<UpdateTagsForDomainRequest, "DomainName"> & keyof UpdateTagsForDomainRequest & keyof UpdateTagsForDomainRequest & keyof UpdateTagsForDomainRequest & keyof UpdateTagsForDomainRequest & keyof UpdateTagsForDomainRequest & keyof UpdateTagsForDomainRequest]: (UpdateTagsForDomainRequest & UpdateTagsForDomainRequest & UpdateTagsForDomainRequest & Omit<UpdateTagsForDomainRequest, "DomainName"> & UpdateTagsForDomainRequest & UpdateTagsForDomainRequest & UpdateTagsForDomainRequest & UpdateTagsForDomainRequest & UpdateTagsForDomainRequest & UpdateTagsForDomainRequest)[K]
    }>): UpdateTagsForDomainResponse {
        return this.client.updateTagsForDomain(
            this.ops["UpdateTagsForDomain"].apply(partialParams)
        );
    }
}