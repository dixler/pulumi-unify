
import * as aws from "@pulumi/aws";
import * as awssdk from "aws-sdk";
import {
    AddClientIDToOpenIDConnectProviderRequest,
    AddRoleToInstanceProfileRequest,
    AddUserToGroupRequest,
    AttachGroupPolicyRequest,
    AttachRolePolicyRequest,
    AttachUserPolicyRequest,
    ChangePasswordRequest,
    CreateAccountAliasRequest,
    CreateGroupRequest,
    CreateInstanceProfileRequest,
    CreateLoginProfileRequest,
    CreateOpenIDConnectProviderRequest,
    CreatePolicyRequest,
    CreatePolicyVersionRequest,
    CreateRoleRequest,
    CreateSAMLProviderRequest,
    CreateServiceLinkedRoleRequest,
    CreateServiceSpecificCredentialRequest,
    CreateUserRequest,
    CreateVirtualMFADeviceRequest,
    DeactivateMFADeviceRequest,
    DeleteAccessKeyRequest,
    DeleteAccountAliasRequest,
    DeleteGroupRequest,
    DeleteGroupPolicyRequest,
    DeleteInstanceProfileRequest,
    DeleteLoginProfileRequest,
    DeleteOpenIDConnectProviderRequest,
    DeletePolicyRequest,
    DeletePolicyVersionRequest,
    DeleteRoleRequest,
    DeleteRolePermissionsBoundaryRequest,
    DeleteRolePolicyRequest,
    DeleteSAMLProviderRequest,
    DeleteSSHPublicKeyRequest,
    DeleteServerCertificateRequest,
    DeleteServiceLinkedRoleRequest,
    DeleteServiceSpecificCredentialRequest,
    DeleteSigningCertificateRequest,
    DeleteUserRequest,
    DeleteUserPermissionsBoundaryRequest,
    DeleteUserPolicyRequest,
    DeleteVirtualMFADeviceRequest,
    DetachGroupPolicyRequest,
    DetachRolePolicyRequest,
    DetachUserPolicyRequest,
    EnableMFADeviceRequest,
    GenerateOrganizationsAccessReportRequest,
    GenerateServiceLastAccessedDetailsRequest,
    GetAccessKeyLastUsedRequest,
    GetContextKeysForCustomPolicyRequest,
    GetContextKeysForPrincipalPolicyRequest,
    GetGroupRequest,
    GetGroupPolicyRequest,
    GetInstanceProfileRequest,
    GetLoginProfileRequest,
    GetOpenIDConnectProviderRequest,
    GetOrganizationsAccessReportRequest,
    GetPolicyRequest,
    GetPolicyVersionRequest,
    GetRoleRequest,
    GetRolePolicyRequest,
    GetSAMLProviderRequest,
    GetSSHPublicKeyRequest,
    GetServerCertificateRequest,
    GetServiceLastAccessedDetailsRequest,
    GetServiceLastAccessedDetailsWithEntitiesRequest,
    GetServiceLinkedRoleDeletionStatusRequest,
    GetUserPolicyRequest,
    ListAttachedGroupPoliciesRequest,
    ListAttachedRolePoliciesRequest,
    ListAttachedUserPoliciesRequest,
    ListEntitiesForPolicyRequest,
    ListGroupPoliciesRequest,
    ListGroupsForUserRequest,
    ListInstanceProfileTagsRequest,
    ListInstanceProfilesForRoleRequest,
    ListMFADeviceTagsRequest,
    ListOpenIDConnectProviderTagsRequest,
    ListPoliciesGrantingServiceAccessRequest,
    ListPolicyTagsRequest,
    ListPolicyVersionsRequest,
    ListRolePoliciesRequest,
    ListRoleTagsRequest,
    ListSAMLProviderTagsRequest,
    ListServerCertificateTagsRequest,
    ListUserPoliciesRequest,
    ListUserTagsRequest,
    PutGroupPolicyRequest,
    PutRolePermissionsBoundaryRequest,
    PutRolePolicyRequest,
    PutUserPermissionsBoundaryRequest,
    PutUserPolicyRequest,
    RemoveClientIDFromOpenIDConnectProviderRequest,
    RemoveRoleFromInstanceProfileRequest,
    RemoveUserFromGroupRequest,
    ResetServiceSpecificCredentialRequest,
    ResyncMFADeviceRequest,
    SetDefaultPolicyVersionRequest,
    SetSecurityTokenServicePreferencesRequest,
    SimulateCustomPolicyRequest,
    SimulatePrincipalPolicyRequest,
    TagInstanceProfileRequest,
    TagMFADeviceRequest,
    TagOpenIDConnectProviderRequest,
    TagPolicyRequest,
    TagRoleRequest,
    TagSAMLProviderRequest,
    TagServerCertificateRequest,
    TagUserRequest,
    UntagInstanceProfileRequest,
    UntagMFADeviceRequest,
    UntagOpenIDConnectProviderRequest,
    UntagPolicyRequest,
    UntagRoleRequest,
    UntagSAMLProviderRequest,
    UntagServerCertificateRequest,
    UntagUserRequest,
    UpdateAccessKeyRequest,
    UpdateAssumeRolePolicyRequest,
    UpdateGroupRequest,
    UpdateLoginProfileRequest,
    UpdateOpenIDConnectProviderThumbprintRequest,
    UpdateRoleRequest,
    UpdateRoleDescriptionRequest,
    UpdateSAMLProviderRequest,
    UpdateSSHPublicKeyRequest,
    UpdateServerCertificateRequest,
    UpdateServiceSpecificCredentialRequest,
    UpdateSigningCertificateRequest,
    UpdateUserRequest,
    UploadSSHPublicKeyRequest,
    UploadServerCertificateRequest,
    UploadSigningCertificateRequest,
    CreateGroupResponse,
    CreateInstanceProfileResponse,
    CreateLoginProfileResponse,
    CreateOpenIDConnectProviderResponse,
    CreatePolicyResponse,
    CreatePolicyVersionResponse,
    CreateRoleResponse,
    CreateSAMLProviderResponse,
    CreateServiceLinkedRoleResponse,
    CreateServiceSpecificCredentialResponse,
    CreateUserResponse,
    CreateVirtualMFADeviceResponse,
    DeleteServiceLinkedRoleResponse,
    GenerateOrganizationsAccessReportResponse,
    GenerateServiceLastAccessedDetailsResponse,
    GetAccessKeyLastUsedResponse,
    GetContextKeysForPolicyResponse,
    GetGroupResponse,
    GetGroupPolicyResponse,
    GetInstanceProfileResponse,
    GetLoginProfileResponse,
    GetOpenIDConnectProviderResponse,
    GetOrganizationsAccessReportResponse,
    GetPolicyResponse,
    GetPolicyVersionResponse,
    GetRoleResponse,
    GetRolePolicyResponse,
    GetSAMLProviderResponse,
    GetSSHPublicKeyResponse,
    GetServerCertificateResponse,
    GetServiceLastAccessedDetailsResponse,
    GetServiceLastAccessedDetailsWithEntitiesResponse,
    GetServiceLinkedRoleDeletionStatusResponse,
    GetUserPolicyResponse,
    ListAttachedGroupPoliciesResponse,
    ListAttachedRolePoliciesResponse,
    ListAttachedUserPoliciesResponse,
    ListEntitiesForPolicyResponse,
    ListGroupPoliciesResponse,
    ListGroupsForUserResponse,
    ListInstanceProfileTagsResponse,
    ListInstanceProfilesForRoleResponse,
    ListMFADeviceTagsResponse,
    ListOpenIDConnectProviderTagsResponse,
    ListPoliciesGrantingServiceAccessResponse,
    ListPolicyTagsResponse,
    ListPolicyVersionsResponse,
    ListRolePoliciesResponse,
    ListRoleTagsResponse,
    ListSAMLProviderTagsResponse,
    ListServerCertificateTagsResponse,
    ListUserPoliciesResponse,
    ListUserTagsResponse,
    ResetServiceSpecificCredentialResponse,
    SimulatePolicyResponse,
    UpdateRoleResponse,
    UpdateRoleDescriptionResponse,
    UpdateSAMLProviderResponse,
    UploadSSHPublicKeyResponse,
    UploadServerCertificateResponse,
    UploadSigningCertificateResponse
} from "aws-sdk/clients/iam";

import {getResourceOperations} from "../parse";

type UndefinedProperties<T> = {
    [P in keyof T]-?: undefined extends T[P] ? P : never
}[keyof T]

type ToOptional<T> = Partial<Pick<T, UndefinedProperties<T>>> & Pick<T, Exclude<keyof T, UndefinedProperties<T>>>

export default class Resource extends aws.iam.UserGroupMembership {
    private ops: any
    private client: any
    constructor(...args: ConstructorParameters<typeof aws.iam.UserGroupMembership>) {
        super(...args)
        this.client = new awssdk.IAM()
        this.ops = getResourceOperations(this as any, require("../../aws-sdk-js/apis/iam-2010-05-08.normal.json"), this.client)
    }

    addClientIDToOpenIDConnectProvider(partialParams: ToOptional<{
      [K in keyof AddClientIDToOpenIDConnectProviderRequest]: (AddClientIDToOpenIDConnectProviderRequest)[K]
    }>): void {
        return this.client.addClientIDToOpenIDConnectProvider(
            this.ops["AddClientIDToOpenIDConnectProvider"].apply(partialParams)
        );
    }

    addRoleToInstanceProfile(partialParams: ToOptional<{
      [K in keyof AddRoleToInstanceProfileRequest]: (AddRoleToInstanceProfileRequest)[K]
    }>): void {
        return this.client.addRoleToInstanceProfile(
            this.ops["AddRoleToInstanceProfile"].apply(partialParams)
        );
    }

    addUserToGroup(partialParams: ToOptional<{
      [K in keyof AddUserToGroupRequest]: (AddUserToGroupRequest)[K]
    }>): void {
        return this.client.addUserToGroup(
            this.ops["AddUserToGroup"].apply(partialParams)
        );
    }

    attachGroupPolicy(partialParams: ToOptional<{
      [K in keyof AttachGroupPolicyRequest]: (AttachGroupPolicyRequest)[K]
    }>): void {
        return this.client.attachGroupPolicy(
            this.ops["AttachGroupPolicy"].apply(partialParams)
        );
    }

    attachRolePolicy(partialParams: ToOptional<{
      [K in keyof AttachRolePolicyRequest]: (AttachRolePolicyRequest)[K]
    }>): void {
        return this.client.attachRolePolicy(
            this.ops["AttachRolePolicy"].apply(partialParams)
        );
    }

    attachUserPolicy(partialParams: ToOptional<{
      [K in keyof AttachUserPolicyRequest]: (AttachUserPolicyRequest)[K]
    }>): void {
        return this.client.attachUserPolicy(
            this.ops["AttachUserPolicy"].apply(partialParams)
        );
    }

    changePassword(partialParams: ToOptional<{
      [K in keyof ChangePasswordRequest]: (ChangePasswordRequest)[K]
    }>): void {
        return this.client.changePassword(
            this.ops["ChangePassword"].apply(partialParams)
        );
    }

    createAccountAlias(partialParams: ToOptional<{
      [K in keyof CreateAccountAliasRequest]: (CreateAccountAliasRequest)[K]
    }>): void {
        return this.client.createAccountAlias(
            this.ops["CreateAccountAlias"].apply(partialParams)
        );
    }

    createGroup(partialParams: ToOptional<{
      [K in keyof CreateGroupRequest]: (CreateGroupRequest)[K]
    }>): CreateGroupResponse {
        return this.client.createGroup(
            this.ops["CreateGroup"].apply(partialParams)
        );
    }

    createInstanceProfile(partialParams: ToOptional<{
      [K in keyof CreateInstanceProfileRequest]: (CreateInstanceProfileRequest)[K]
    }>): CreateInstanceProfileResponse {
        return this.client.createInstanceProfile(
            this.ops["CreateInstanceProfile"].apply(partialParams)
        );
    }

    createLoginProfile(partialParams: ToOptional<{
      [K in keyof CreateLoginProfileRequest]: (CreateLoginProfileRequest)[K]
    }>): CreateLoginProfileResponse {
        return this.client.createLoginProfile(
            this.ops["CreateLoginProfile"].apply(partialParams)
        );
    }

    createOpenIDConnectProvider(partialParams: ToOptional<{
      [K in keyof CreateOpenIDConnectProviderRequest]: (CreateOpenIDConnectProviderRequest)[K]
    }>): CreateOpenIDConnectProviderResponse {
        return this.client.createOpenIDConnectProvider(
            this.ops["CreateOpenIDConnectProvider"].apply(partialParams)
        );
    }

    createPolicy(partialParams: ToOptional<{
      [K in keyof CreatePolicyRequest]: (CreatePolicyRequest)[K]
    }>): CreatePolicyResponse {
        return this.client.createPolicy(
            this.ops["CreatePolicy"].apply(partialParams)
        );
    }

    createPolicyVersion(partialParams: ToOptional<{
      [K in keyof CreatePolicyVersionRequest]: (CreatePolicyVersionRequest)[K]
    }>): CreatePolicyVersionResponse {
        return this.client.createPolicyVersion(
            this.ops["CreatePolicyVersion"].apply(partialParams)
        );
    }

    createRole(partialParams: ToOptional<{
      [K in keyof CreateRoleRequest]: (CreateRoleRequest)[K]
    }>): CreateRoleResponse {
        return this.client.createRole(
            this.ops["CreateRole"].apply(partialParams)
        );
    }

    createSAMLProvider(partialParams: ToOptional<{
      [K in keyof CreateSAMLProviderRequest]: (CreateSAMLProviderRequest)[K]
    }>): CreateSAMLProviderResponse {
        return this.client.createSAMLProvider(
            this.ops["CreateSAMLProvider"].apply(partialParams)
        );
    }

    createServiceLinkedRole(partialParams: ToOptional<{
      [K in keyof CreateServiceLinkedRoleRequest]: (CreateServiceLinkedRoleRequest)[K]
    }>): CreateServiceLinkedRoleResponse {
        return this.client.createServiceLinkedRole(
            this.ops["CreateServiceLinkedRole"].apply(partialParams)
        );
    }

    createServiceSpecificCredential(partialParams: ToOptional<{
      [K in keyof CreateServiceSpecificCredentialRequest]: (CreateServiceSpecificCredentialRequest)[K]
    }>): CreateServiceSpecificCredentialResponse {
        return this.client.createServiceSpecificCredential(
            this.ops["CreateServiceSpecificCredential"].apply(partialParams)
        );
    }

    createUser(partialParams: ToOptional<{
      [K in keyof CreateUserRequest]: (CreateUserRequest)[K]
    }>): CreateUserResponse {
        return this.client.createUser(
            this.ops["CreateUser"].apply(partialParams)
        );
    }

    createVirtualMFADevice(partialParams: ToOptional<{
      [K in keyof CreateVirtualMFADeviceRequest]: (CreateVirtualMFADeviceRequest)[K]
    }>): CreateVirtualMFADeviceResponse {
        return this.client.createVirtualMFADevice(
            this.ops["CreateVirtualMFADevice"].apply(partialParams)
        );
    }

    deactivateMFADevice(partialParams: ToOptional<{
      [K in keyof DeactivateMFADeviceRequest]: (DeactivateMFADeviceRequest)[K]
    }>): void {
        return this.client.deactivateMFADevice(
            this.ops["DeactivateMFADevice"].apply(partialParams)
        );
    }

    deleteAccessKey(partialParams: ToOptional<{
      [K in keyof DeleteAccessKeyRequest]: (DeleteAccessKeyRequest)[K]
    }>): void {
        return this.client.deleteAccessKey(
            this.ops["DeleteAccessKey"].apply(partialParams)
        );
    }

    deleteAccountAlias(partialParams: ToOptional<{
      [K in keyof DeleteAccountAliasRequest]: (DeleteAccountAliasRequest)[K]
    }>): void {
        return this.client.deleteAccountAlias(
            this.ops["DeleteAccountAlias"].apply(partialParams)
        );
    }

    deleteGroup(partialParams: ToOptional<{
      [K in keyof DeleteGroupRequest]: (DeleteGroupRequest)[K]
    }>): void {
        return this.client.deleteGroup(
            this.ops["DeleteGroup"].apply(partialParams)
        );
    }

    deleteGroupPolicy(partialParams: ToOptional<{
      [K in keyof DeleteGroupPolicyRequest]: (DeleteGroupPolicyRequest)[K]
    }>): void {
        return this.client.deleteGroupPolicy(
            this.ops["DeleteGroupPolicy"].apply(partialParams)
        );
    }

    deleteInstanceProfile(partialParams: ToOptional<{
      [K in keyof DeleteInstanceProfileRequest]: (DeleteInstanceProfileRequest)[K]
    }>): void {
        return this.client.deleteInstanceProfile(
            this.ops["DeleteInstanceProfile"].apply(partialParams)
        );
    }

    deleteLoginProfile(partialParams: ToOptional<{
      [K in keyof DeleteLoginProfileRequest]: (DeleteLoginProfileRequest)[K]
    }>): void {
        return this.client.deleteLoginProfile(
            this.ops["DeleteLoginProfile"].apply(partialParams)
        );
    }

    deleteOpenIDConnectProvider(partialParams: ToOptional<{
      [K in keyof DeleteOpenIDConnectProviderRequest]: (DeleteOpenIDConnectProviderRequest)[K]
    }>): void {
        return this.client.deleteOpenIDConnectProvider(
            this.ops["DeleteOpenIDConnectProvider"].apply(partialParams)
        );
    }

    deletePolicy(partialParams: ToOptional<{
      [K in keyof DeletePolicyRequest]: (DeletePolicyRequest)[K]
    }>): void {
        return this.client.deletePolicy(
            this.ops["DeletePolicy"].apply(partialParams)
        );
    }

    deletePolicyVersion(partialParams: ToOptional<{
      [K in keyof DeletePolicyVersionRequest]: (DeletePolicyVersionRequest)[K]
    }>): void {
        return this.client.deletePolicyVersion(
            this.ops["DeletePolicyVersion"].apply(partialParams)
        );
    }

    deleteRole(partialParams: ToOptional<{
      [K in keyof DeleteRoleRequest]: (DeleteRoleRequest)[K]
    }>): void {
        return this.client.deleteRole(
            this.ops["DeleteRole"].apply(partialParams)
        );
    }

    deleteRolePermissionsBoundary(partialParams: ToOptional<{
      [K in keyof DeleteRolePermissionsBoundaryRequest]: (DeleteRolePermissionsBoundaryRequest)[K]
    }>): void {
        return this.client.deleteRolePermissionsBoundary(
            this.ops["DeleteRolePermissionsBoundary"].apply(partialParams)
        );
    }

    deleteRolePolicy(partialParams: ToOptional<{
      [K in keyof DeleteRolePolicyRequest]: (DeleteRolePolicyRequest)[K]
    }>): void {
        return this.client.deleteRolePolicy(
            this.ops["DeleteRolePolicy"].apply(partialParams)
        );
    }

    deleteSAMLProvider(partialParams: ToOptional<{
      [K in keyof DeleteSAMLProviderRequest]: (DeleteSAMLProviderRequest)[K]
    }>): void {
        return this.client.deleteSAMLProvider(
            this.ops["DeleteSAMLProvider"].apply(partialParams)
        );
    }

    deleteSSHPublicKey(partialParams: ToOptional<{
      [K in keyof DeleteSSHPublicKeyRequest]: (DeleteSSHPublicKeyRequest)[K]
    }>): void {
        return this.client.deleteSSHPublicKey(
            this.ops["DeleteSSHPublicKey"].apply(partialParams)
        );
    }

    deleteServerCertificate(partialParams: ToOptional<{
      [K in keyof DeleteServerCertificateRequest]: (DeleteServerCertificateRequest)[K]
    }>): void {
        return this.client.deleteServerCertificate(
            this.ops["DeleteServerCertificate"].apply(partialParams)
        );
    }

    deleteServiceLinkedRole(partialParams: ToOptional<{
      [K in keyof DeleteServiceLinkedRoleRequest]: (DeleteServiceLinkedRoleRequest)[K]
    }>): DeleteServiceLinkedRoleResponse {
        return this.client.deleteServiceLinkedRole(
            this.ops["DeleteServiceLinkedRole"].apply(partialParams)
        );
    }

    deleteServiceSpecificCredential(partialParams: ToOptional<{
      [K in keyof DeleteServiceSpecificCredentialRequest]: (DeleteServiceSpecificCredentialRequest)[K]
    }>): void {
        return this.client.deleteServiceSpecificCredential(
            this.ops["DeleteServiceSpecificCredential"].apply(partialParams)
        );
    }

    deleteSigningCertificate(partialParams: ToOptional<{
      [K in keyof DeleteSigningCertificateRequest]: (DeleteSigningCertificateRequest)[K]
    }>): void {
        return this.client.deleteSigningCertificate(
            this.ops["DeleteSigningCertificate"].apply(partialParams)
        );
    }

    deleteUser(partialParams: ToOptional<{
      [K in keyof DeleteUserRequest]: (DeleteUserRequest)[K]
    }>): void {
        return this.client.deleteUser(
            this.ops["DeleteUser"].apply(partialParams)
        );
    }

    deleteUserPermissionsBoundary(partialParams: ToOptional<{
      [K in keyof DeleteUserPermissionsBoundaryRequest]: (DeleteUserPermissionsBoundaryRequest)[K]
    }>): void {
        return this.client.deleteUserPermissionsBoundary(
            this.ops["DeleteUserPermissionsBoundary"].apply(partialParams)
        );
    }

    deleteUserPolicy(partialParams: ToOptional<{
      [K in keyof DeleteUserPolicyRequest]: (DeleteUserPolicyRequest)[K]
    }>): void {
        return this.client.deleteUserPolicy(
            this.ops["DeleteUserPolicy"].apply(partialParams)
        );
    }

    deleteVirtualMFADevice(partialParams: ToOptional<{
      [K in keyof DeleteVirtualMFADeviceRequest]: (DeleteVirtualMFADeviceRequest)[K]
    }>): void {
        return this.client.deleteVirtualMFADevice(
            this.ops["DeleteVirtualMFADevice"].apply(partialParams)
        );
    }

    detachGroupPolicy(partialParams: ToOptional<{
      [K in keyof DetachGroupPolicyRequest]: (DetachGroupPolicyRequest)[K]
    }>): void {
        return this.client.detachGroupPolicy(
            this.ops["DetachGroupPolicy"].apply(partialParams)
        );
    }

    detachRolePolicy(partialParams: ToOptional<{
      [K in keyof DetachRolePolicyRequest]: (DetachRolePolicyRequest)[K]
    }>): void {
        return this.client.detachRolePolicy(
            this.ops["DetachRolePolicy"].apply(partialParams)
        );
    }

    detachUserPolicy(partialParams: ToOptional<{
      [K in keyof DetachUserPolicyRequest]: (DetachUserPolicyRequest)[K]
    }>): void {
        return this.client.detachUserPolicy(
            this.ops["DetachUserPolicy"].apply(partialParams)
        );
    }

    enableMFADevice(partialParams: ToOptional<{
      [K in keyof EnableMFADeviceRequest]: (EnableMFADeviceRequest)[K]
    }>): void {
        return this.client.enableMFADevice(
            this.ops["EnableMFADevice"].apply(partialParams)
        );
    }

    generateOrganizationsAccessReport(partialParams: ToOptional<{
      [K in keyof GenerateOrganizationsAccessReportRequest]: (GenerateOrganizationsAccessReportRequest)[K]
    }>): GenerateOrganizationsAccessReportResponse {
        return this.client.generateOrganizationsAccessReport(
            this.ops["GenerateOrganizationsAccessReport"].apply(partialParams)
        );
    }

    generateServiceLastAccessedDetails(partialParams: ToOptional<{
      [K in keyof GenerateServiceLastAccessedDetailsRequest]: (GenerateServiceLastAccessedDetailsRequest)[K]
    }>): GenerateServiceLastAccessedDetailsResponse {
        return this.client.generateServiceLastAccessedDetails(
            this.ops["GenerateServiceLastAccessedDetails"].apply(partialParams)
        );
    }

    getAccessKeyLastUsed(partialParams: ToOptional<{
      [K in keyof GetAccessKeyLastUsedRequest]: (GetAccessKeyLastUsedRequest)[K]
    }>): GetAccessKeyLastUsedResponse {
        return this.client.getAccessKeyLastUsed(
            this.ops["GetAccessKeyLastUsed"].apply(partialParams)
        );
    }

    getContextKeysForCustomPolicy(partialParams: ToOptional<{
      [K in keyof GetContextKeysForCustomPolicyRequest]: (GetContextKeysForCustomPolicyRequest)[K]
    }>): GetContextKeysForPolicyResponse {
        return this.client.getContextKeysForCustomPolicy(
            this.ops["GetContextKeysForCustomPolicy"].apply(partialParams)
        );
    }

    getContextKeysForPrincipalPolicy(partialParams: ToOptional<{
      [K in keyof GetContextKeysForPrincipalPolicyRequest]: (GetContextKeysForPrincipalPolicyRequest)[K]
    }>): GetContextKeysForPolicyResponse {
        return this.client.getContextKeysForPrincipalPolicy(
            this.ops["GetContextKeysForPrincipalPolicy"].apply(partialParams)
        );
    }

    getGroup(partialParams: ToOptional<{
      [K in keyof GetGroupRequest]: (GetGroupRequest)[K]
    }>): GetGroupResponse {
        return this.client.getGroup(
            this.ops["GetGroup"].apply(partialParams)
        );
    }

    getGroupPolicy(partialParams: ToOptional<{
      [K in keyof GetGroupPolicyRequest]: (GetGroupPolicyRequest)[K]
    }>): GetGroupPolicyResponse {
        return this.client.getGroupPolicy(
            this.ops["GetGroupPolicy"].apply(partialParams)
        );
    }

    getInstanceProfile(partialParams: ToOptional<{
      [K in keyof GetInstanceProfileRequest]: (GetInstanceProfileRequest)[K]
    }>): GetInstanceProfileResponse {
        return this.client.getInstanceProfile(
            this.ops["GetInstanceProfile"].apply(partialParams)
        );
    }

    getLoginProfile(partialParams: ToOptional<{
      [K in keyof GetLoginProfileRequest]: (GetLoginProfileRequest)[K]
    }>): GetLoginProfileResponse {
        return this.client.getLoginProfile(
            this.ops["GetLoginProfile"].apply(partialParams)
        );
    }

    getOpenIDConnectProvider(partialParams: ToOptional<{
      [K in keyof GetOpenIDConnectProviderRequest]: (GetOpenIDConnectProviderRequest)[K]
    }>): GetOpenIDConnectProviderResponse {
        return this.client.getOpenIDConnectProvider(
            this.ops["GetOpenIDConnectProvider"].apply(partialParams)
        );
    }

    getOrganizationsAccessReport(partialParams: ToOptional<{
      [K in keyof GetOrganizationsAccessReportRequest]: (GetOrganizationsAccessReportRequest)[K]
    }>): GetOrganizationsAccessReportResponse {
        return this.client.getOrganizationsAccessReport(
            this.ops["GetOrganizationsAccessReport"].apply(partialParams)
        );
    }

    getPolicy(partialParams: ToOptional<{
      [K in keyof GetPolicyRequest]: (GetPolicyRequest)[K]
    }>): GetPolicyResponse {
        return this.client.getPolicy(
            this.ops["GetPolicy"].apply(partialParams)
        );
    }

    getPolicyVersion(partialParams: ToOptional<{
      [K in keyof GetPolicyVersionRequest]: (GetPolicyVersionRequest)[K]
    }>): GetPolicyVersionResponse {
        return this.client.getPolicyVersion(
            this.ops["GetPolicyVersion"].apply(partialParams)
        );
    }

    getRole(partialParams: ToOptional<{
      [K in keyof GetRoleRequest]: (GetRoleRequest)[K]
    }>): GetRoleResponse {
        return this.client.getRole(
            this.ops["GetRole"].apply(partialParams)
        );
    }

    getRolePolicy(partialParams: ToOptional<{
      [K in keyof GetRolePolicyRequest]: (GetRolePolicyRequest)[K]
    }>): GetRolePolicyResponse {
        return this.client.getRolePolicy(
            this.ops["GetRolePolicy"].apply(partialParams)
        );
    }

    getSAMLProvider(partialParams: ToOptional<{
      [K in keyof GetSAMLProviderRequest]: (GetSAMLProviderRequest)[K]
    }>): GetSAMLProviderResponse {
        return this.client.getSAMLProvider(
            this.ops["GetSAMLProvider"].apply(partialParams)
        );
    }

    getSSHPublicKey(partialParams: ToOptional<{
      [K in keyof GetSSHPublicKeyRequest]: (GetSSHPublicKeyRequest)[K]
    }>): GetSSHPublicKeyResponse {
        return this.client.getSSHPublicKey(
            this.ops["GetSSHPublicKey"].apply(partialParams)
        );
    }

    getServerCertificate(partialParams: ToOptional<{
      [K in keyof GetServerCertificateRequest]: (GetServerCertificateRequest)[K]
    }>): GetServerCertificateResponse {
        return this.client.getServerCertificate(
            this.ops["GetServerCertificate"].apply(partialParams)
        );
    }

    getServiceLastAccessedDetails(partialParams: ToOptional<{
      [K in keyof GetServiceLastAccessedDetailsRequest]: (GetServiceLastAccessedDetailsRequest)[K]
    }>): GetServiceLastAccessedDetailsResponse {
        return this.client.getServiceLastAccessedDetails(
            this.ops["GetServiceLastAccessedDetails"].apply(partialParams)
        );
    }

    getServiceLastAccessedDetailsWithEntities(partialParams: ToOptional<{
      [K in keyof GetServiceLastAccessedDetailsWithEntitiesRequest]: (GetServiceLastAccessedDetailsWithEntitiesRequest)[K]
    }>): GetServiceLastAccessedDetailsWithEntitiesResponse {
        return this.client.getServiceLastAccessedDetailsWithEntities(
            this.ops["GetServiceLastAccessedDetailsWithEntities"].apply(partialParams)
        );
    }

    getServiceLinkedRoleDeletionStatus(partialParams: ToOptional<{
      [K in keyof GetServiceLinkedRoleDeletionStatusRequest]: (GetServiceLinkedRoleDeletionStatusRequest)[K]
    }>): GetServiceLinkedRoleDeletionStatusResponse {
        return this.client.getServiceLinkedRoleDeletionStatus(
            this.ops["GetServiceLinkedRoleDeletionStatus"].apply(partialParams)
        );
    }

    getUserPolicy(partialParams: ToOptional<{
      [K in keyof GetUserPolicyRequest]: (GetUserPolicyRequest)[K]
    }>): GetUserPolicyResponse {
        return this.client.getUserPolicy(
            this.ops["GetUserPolicy"].apply(partialParams)
        );
    }

    listAttachedGroupPolicies(partialParams: ToOptional<{
      [K in keyof ListAttachedGroupPoliciesRequest]: (ListAttachedGroupPoliciesRequest)[K]
    }>): ListAttachedGroupPoliciesResponse {
        return this.client.listAttachedGroupPolicies(
            this.ops["ListAttachedGroupPolicies"].apply(partialParams)
        );
    }

    listAttachedRolePolicies(partialParams: ToOptional<{
      [K in keyof ListAttachedRolePoliciesRequest]: (ListAttachedRolePoliciesRequest)[K]
    }>): ListAttachedRolePoliciesResponse {
        return this.client.listAttachedRolePolicies(
            this.ops["ListAttachedRolePolicies"].apply(partialParams)
        );
    }

    listAttachedUserPolicies(partialParams: ToOptional<{
      [K in keyof ListAttachedUserPoliciesRequest]: (ListAttachedUserPoliciesRequest)[K]
    }>): ListAttachedUserPoliciesResponse {
        return this.client.listAttachedUserPolicies(
            this.ops["ListAttachedUserPolicies"].apply(partialParams)
        );
    }

    listEntitiesForPolicy(partialParams: ToOptional<{
      [K in keyof ListEntitiesForPolicyRequest]: (ListEntitiesForPolicyRequest)[K]
    }>): ListEntitiesForPolicyResponse {
        return this.client.listEntitiesForPolicy(
            this.ops["ListEntitiesForPolicy"].apply(partialParams)
        );
    }

    listGroupPolicies(partialParams: ToOptional<{
      [K in keyof ListGroupPoliciesRequest]: (ListGroupPoliciesRequest)[K]
    }>): ListGroupPoliciesResponse {
        return this.client.listGroupPolicies(
            this.ops["ListGroupPolicies"].apply(partialParams)
        );
    }

    listGroupsForUser(partialParams: ToOptional<{
      [K in keyof ListGroupsForUserRequest]: (ListGroupsForUserRequest)[K]
    }>): ListGroupsForUserResponse {
        return this.client.listGroupsForUser(
            this.ops["ListGroupsForUser"].apply(partialParams)
        );
    }

    listInstanceProfileTags(partialParams: ToOptional<{
      [K in keyof ListInstanceProfileTagsRequest]: (ListInstanceProfileTagsRequest)[K]
    }>): ListInstanceProfileTagsResponse {
        return this.client.listInstanceProfileTags(
            this.ops["ListInstanceProfileTags"].apply(partialParams)
        );
    }

    listInstanceProfilesForRole(partialParams: ToOptional<{
      [K in keyof ListInstanceProfilesForRoleRequest]: (ListInstanceProfilesForRoleRequest)[K]
    }>): ListInstanceProfilesForRoleResponse {
        return this.client.listInstanceProfilesForRole(
            this.ops["ListInstanceProfilesForRole"].apply(partialParams)
        );
    }

    listMFADeviceTags(partialParams: ToOptional<{
      [K in keyof ListMFADeviceTagsRequest]: (ListMFADeviceTagsRequest)[K]
    }>): ListMFADeviceTagsResponse {
        return this.client.listMFADeviceTags(
            this.ops["ListMFADeviceTags"].apply(partialParams)
        );
    }

    listOpenIDConnectProviderTags(partialParams: ToOptional<{
      [K in keyof ListOpenIDConnectProviderTagsRequest]: (ListOpenIDConnectProviderTagsRequest)[K]
    }>): ListOpenIDConnectProviderTagsResponse {
        return this.client.listOpenIDConnectProviderTags(
            this.ops["ListOpenIDConnectProviderTags"].apply(partialParams)
        );
    }

    listPoliciesGrantingServiceAccess(partialParams: ToOptional<{
      [K in keyof ListPoliciesGrantingServiceAccessRequest]: (ListPoliciesGrantingServiceAccessRequest)[K]
    }>): ListPoliciesGrantingServiceAccessResponse {
        return this.client.listPoliciesGrantingServiceAccess(
            this.ops["ListPoliciesGrantingServiceAccess"].apply(partialParams)
        );
    }

    listPolicyTags(partialParams: ToOptional<{
      [K in keyof ListPolicyTagsRequest]: (ListPolicyTagsRequest)[K]
    }>): ListPolicyTagsResponse {
        return this.client.listPolicyTags(
            this.ops["ListPolicyTags"].apply(partialParams)
        );
    }

    listPolicyVersions(partialParams: ToOptional<{
      [K in keyof ListPolicyVersionsRequest]: (ListPolicyVersionsRequest)[K]
    }>): ListPolicyVersionsResponse {
        return this.client.listPolicyVersions(
            this.ops["ListPolicyVersions"].apply(partialParams)
        );
    }

    listRolePolicies(partialParams: ToOptional<{
      [K in keyof ListRolePoliciesRequest]: (ListRolePoliciesRequest)[K]
    }>): ListRolePoliciesResponse {
        return this.client.listRolePolicies(
            this.ops["ListRolePolicies"].apply(partialParams)
        );
    }

    listRoleTags(partialParams: ToOptional<{
      [K in keyof ListRoleTagsRequest]: (ListRoleTagsRequest)[K]
    }>): ListRoleTagsResponse {
        return this.client.listRoleTags(
            this.ops["ListRoleTags"].apply(partialParams)
        );
    }

    listSAMLProviderTags(partialParams: ToOptional<{
      [K in keyof ListSAMLProviderTagsRequest]: (ListSAMLProviderTagsRequest)[K]
    }>): ListSAMLProviderTagsResponse {
        return this.client.listSAMLProviderTags(
            this.ops["ListSAMLProviderTags"].apply(partialParams)
        );
    }

    listServerCertificateTags(partialParams: ToOptional<{
      [K in keyof ListServerCertificateTagsRequest]: (ListServerCertificateTagsRequest)[K]
    }>): ListServerCertificateTagsResponse {
        return this.client.listServerCertificateTags(
            this.ops["ListServerCertificateTags"].apply(partialParams)
        );
    }

    listUserPolicies(partialParams: ToOptional<{
      [K in keyof ListUserPoliciesRequest]: (ListUserPoliciesRequest)[K]
    }>): ListUserPoliciesResponse {
        return this.client.listUserPolicies(
            this.ops["ListUserPolicies"].apply(partialParams)
        );
    }

    listUserTags(partialParams: ToOptional<{
      [K in keyof ListUserTagsRequest]: (ListUserTagsRequest)[K]
    }>): ListUserTagsResponse {
        return this.client.listUserTags(
            this.ops["ListUserTags"].apply(partialParams)
        );
    }

    putGroupPolicy(partialParams: ToOptional<{
      [K in keyof PutGroupPolicyRequest]: (PutGroupPolicyRequest)[K]
    }>): void {
        return this.client.putGroupPolicy(
            this.ops["PutGroupPolicy"].apply(partialParams)
        );
    }

    putRolePermissionsBoundary(partialParams: ToOptional<{
      [K in keyof PutRolePermissionsBoundaryRequest]: (PutRolePermissionsBoundaryRequest)[K]
    }>): void {
        return this.client.putRolePermissionsBoundary(
            this.ops["PutRolePermissionsBoundary"].apply(partialParams)
        );
    }

    putRolePolicy(partialParams: ToOptional<{
      [K in keyof PutRolePolicyRequest]: (PutRolePolicyRequest)[K]
    }>): void {
        return this.client.putRolePolicy(
            this.ops["PutRolePolicy"].apply(partialParams)
        );
    }

    putUserPermissionsBoundary(partialParams: ToOptional<{
      [K in keyof PutUserPermissionsBoundaryRequest]: (PutUserPermissionsBoundaryRequest)[K]
    }>): void {
        return this.client.putUserPermissionsBoundary(
            this.ops["PutUserPermissionsBoundary"].apply(partialParams)
        );
    }

    putUserPolicy(partialParams: ToOptional<{
      [K in keyof PutUserPolicyRequest]: (PutUserPolicyRequest)[K]
    }>): void {
        return this.client.putUserPolicy(
            this.ops["PutUserPolicy"].apply(partialParams)
        );
    }

    removeClientIDFromOpenIDConnectProvider(partialParams: ToOptional<{
      [K in keyof RemoveClientIDFromOpenIDConnectProviderRequest]: (RemoveClientIDFromOpenIDConnectProviderRequest)[K]
    }>): void {
        return this.client.removeClientIDFromOpenIDConnectProvider(
            this.ops["RemoveClientIDFromOpenIDConnectProvider"].apply(partialParams)
        );
    }

    removeRoleFromInstanceProfile(partialParams: ToOptional<{
      [K in keyof RemoveRoleFromInstanceProfileRequest]: (RemoveRoleFromInstanceProfileRequest)[K]
    }>): void {
        return this.client.removeRoleFromInstanceProfile(
            this.ops["RemoveRoleFromInstanceProfile"].apply(partialParams)
        );
    }

    removeUserFromGroup(partialParams: ToOptional<{
      [K in keyof RemoveUserFromGroupRequest]: (RemoveUserFromGroupRequest)[K]
    }>): void {
        return this.client.removeUserFromGroup(
            this.ops["RemoveUserFromGroup"].apply(partialParams)
        );
    }

    resetServiceSpecificCredential(partialParams: ToOptional<{
      [K in keyof ResetServiceSpecificCredentialRequest]: (ResetServiceSpecificCredentialRequest)[K]
    }>): ResetServiceSpecificCredentialResponse {
        return this.client.resetServiceSpecificCredential(
            this.ops["ResetServiceSpecificCredential"].apply(partialParams)
        );
    }

    resyncMFADevice(partialParams: ToOptional<{
      [K in keyof ResyncMFADeviceRequest]: (ResyncMFADeviceRequest)[K]
    }>): void {
        return this.client.resyncMFADevice(
            this.ops["ResyncMFADevice"].apply(partialParams)
        );
    }

    setDefaultPolicyVersion(partialParams: ToOptional<{
      [K in keyof SetDefaultPolicyVersionRequest]: (SetDefaultPolicyVersionRequest)[K]
    }>): void {
        return this.client.setDefaultPolicyVersion(
            this.ops["SetDefaultPolicyVersion"].apply(partialParams)
        );
    }

    setSecurityTokenServicePreferences(partialParams: ToOptional<{
      [K in keyof SetSecurityTokenServicePreferencesRequest]: (SetSecurityTokenServicePreferencesRequest)[K]
    }>): void {
        return this.client.setSecurityTokenServicePreferences(
            this.ops["SetSecurityTokenServicePreferences"].apply(partialParams)
        );
    }

    simulateCustomPolicy(partialParams: ToOptional<{
      [K in keyof SimulateCustomPolicyRequest]: (SimulateCustomPolicyRequest)[K]
    }>): SimulatePolicyResponse {
        return this.client.simulateCustomPolicy(
            this.ops["SimulateCustomPolicy"].apply(partialParams)
        );
    }

    simulatePrincipalPolicy(partialParams: ToOptional<{
      [K in keyof SimulatePrincipalPolicyRequest]: (SimulatePrincipalPolicyRequest)[K]
    }>): SimulatePolicyResponse {
        return this.client.simulatePrincipalPolicy(
            this.ops["SimulatePrincipalPolicy"].apply(partialParams)
        );
    }

    tagInstanceProfile(partialParams: ToOptional<{
      [K in keyof TagInstanceProfileRequest]: (TagInstanceProfileRequest)[K]
    }>): void {
        return this.client.tagInstanceProfile(
            this.ops["TagInstanceProfile"].apply(partialParams)
        );
    }

    tagMFADevice(partialParams: ToOptional<{
      [K in keyof TagMFADeviceRequest]: (TagMFADeviceRequest)[K]
    }>): void {
        return this.client.tagMFADevice(
            this.ops["TagMFADevice"].apply(partialParams)
        );
    }

    tagOpenIDConnectProvider(partialParams: ToOptional<{
      [K in keyof TagOpenIDConnectProviderRequest]: (TagOpenIDConnectProviderRequest)[K]
    }>): void {
        return this.client.tagOpenIDConnectProvider(
            this.ops["TagOpenIDConnectProvider"].apply(partialParams)
        );
    }

    tagPolicy(partialParams: ToOptional<{
      [K in keyof TagPolicyRequest]: (TagPolicyRequest)[K]
    }>): void {
        return this.client.tagPolicy(
            this.ops["TagPolicy"].apply(partialParams)
        );
    }

    tagRole(partialParams: ToOptional<{
      [K in keyof TagRoleRequest]: (TagRoleRequest)[K]
    }>): void {
        return this.client.tagRole(
            this.ops["TagRole"].apply(partialParams)
        );
    }

    tagSAMLProvider(partialParams: ToOptional<{
      [K in keyof TagSAMLProviderRequest]: (TagSAMLProviderRequest)[K]
    }>): void {
        return this.client.tagSAMLProvider(
            this.ops["TagSAMLProvider"].apply(partialParams)
        );
    }

    tagServerCertificate(partialParams: ToOptional<{
      [K in keyof TagServerCertificateRequest]: (TagServerCertificateRequest)[K]
    }>): void {
        return this.client.tagServerCertificate(
            this.ops["TagServerCertificate"].apply(partialParams)
        );
    }

    tagUser(partialParams: ToOptional<{
      [K in keyof TagUserRequest]: (TagUserRequest)[K]
    }>): void {
        return this.client.tagUser(
            this.ops["TagUser"].apply(partialParams)
        );
    }

    untagInstanceProfile(partialParams: ToOptional<{
      [K in keyof UntagInstanceProfileRequest]: (UntagInstanceProfileRequest)[K]
    }>): void {
        return this.client.untagInstanceProfile(
            this.ops["UntagInstanceProfile"].apply(partialParams)
        );
    }

    untagMFADevice(partialParams: ToOptional<{
      [K in keyof UntagMFADeviceRequest]: (UntagMFADeviceRequest)[K]
    }>): void {
        return this.client.untagMFADevice(
            this.ops["UntagMFADevice"].apply(partialParams)
        );
    }

    untagOpenIDConnectProvider(partialParams: ToOptional<{
      [K in keyof UntagOpenIDConnectProviderRequest]: (UntagOpenIDConnectProviderRequest)[K]
    }>): void {
        return this.client.untagOpenIDConnectProvider(
            this.ops["UntagOpenIDConnectProvider"].apply(partialParams)
        );
    }

    untagPolicy(partialParams: ToOptional<{
      [K in keyof UntagPolicyRequest]: (UntagPolicyRequest)[K]
    }>): void {
        return this.client.untagPolicy(
            this.ops["UntagPolicy"].apply(partialParams)
        );
    }

    untagRole(partialParams: ToOptional<{
      [K in keyof UntagRoleRequest]: (UntagRoleRequest)[K]
    }>): void {
        return this.client.untagRole(
            this.ops["UntagRole"].apply(partialParams)
        );
    }

    untagSAMLProvider(partialParams: ToOptional<{
      [K in keyof UntagSAMLProviderRequest]: (UntagSAMLProviderRequest)[K]
    }>): void {
        return this.client.untagSAMLProvider(
            this.ops["UntagSAMLProvider"].apply(partialParams)
        );
    }

    untagServerCertificate(partialParams: ToOptional<{
      [K in keyof UntagServerCertificateRequest]: (UntagServerCertificateRequest)[K]
    }>): void {
        return this.client.untagServerCertificate(
            this.ops["UntagServerCertificate"].apply(partialParams)
        );
    }

    untagUser(partialParams: ToOptional<{
      [K in keyof UntagUserRequest]: (UntagUserRequest)[K]
    }>): void {
        return this.client.untagUser(
            this.ops["UntagUser"].apply(partialParams)
        );
    }

    updateAccessKey(partialParams: ToOptional<{
      [K in keyof UpdateAccessKeyRequest]: (UpdateAccessKeyRequest)[K]
    }>): void {
        return this.client.updateAccessKey(
            this.ops["UpdateAccessKey"].apply(partialParams)
        );
    }

    updateAssumeRolePolicy(partialParams: ToOptional<{
      [K in keyof UpdateAssumeRolePolicyRequest]: (UpdateAssumeRolePolicyRequest)[K]
    }>): void {
        return this.client.updateAssumeRolePolicy(
            this.ops["UpdateAssumeRolePolicy"].apply(partialParams)
        );
    }

    updateGroup(partialParams: ToOptional<{
      [K in keyof UpdateGroupRequest]: (UpdateGroupRequest)[K]
    }>): void {
        return this.client.updateGroup(
            this.ops["UpdateGroup"].apply(partialParams)
        );
    }

    updateLoginProfile(partialParams: ToOptional<{
      [K in keyof UpdateLoginProfileRequest]: (UpdateLoginProfileRequest)[K]
    }>): void {
        return this.client.updateLoginProfile(
            this.ops["UpdateLoginProfile"].apply(partialParams)
        );
    }

    updateOpenIDConnectProviderThumbprint(partialParams: ToOptional<{
      [K in keyof UpdateOpenIDConnectProviderThumbprintRequest]: (UpdateOpenIDConnectProviderThumbprintRequest)[K]
    }>): void {
        return this.client.updateOpenIDConnectProviderThumbprint(
            this.ops["UpdateOpenIDConnectProviderThumbprint"].apply(partialParams)
        );
    }

    updateRole(partialParams: ToOptional<{
      [K in keyof UpdateRoleRequest]: (UpdateRoleRequest)[K]
    }>): UpdateRoleResponse {
        return this.client.updateRole(
            this.ops["UpdateRole"].apply(partialParams)
        );
    }

    updateRoleDescription(partialParams: ToOptional<{
      [K in keyof UpdateRoleDescriptionRequest]: (UpdateRoleDescriptionRequest)[K]
    }>): UpdateRoleDescriptionResponse {
        return this.client.updateRoleDescription(
            this.ops["UpdateRoleDescription"].apply(partialParams)
        );
    }

    updateSAMLProvider(partialParams: ToOptional<{
      [K in keyof UpdateSAMLProviderRequest]: (UpdateSAMLProviderRequest)[K]
    }>): UpdateSAMLProviderResponse {
        return this.client.updateSAMLProvider(
            this.ops["UpdateSAMLProvider"].apply(partialParams)
        );
    }

    updateSSHPublicKey(partialParams: ToOptional<{
      [K in keyof UpdateSSHPublicKeyRequest]: (UpdateSSHPublicKeyRequest)[K]
    }>): void {
        return this.client.updateSSHPublicKey(
            this.ops["UpdateSSHPublicKey"].apply(partialParams)
        );
    }

    updateServerCertificate(partialParams: ToOptional<{
      [K in keyof UpdateServerCertificateRequest]: (UpdateServerCertificateRequest)[K]
    }>): void {
        return this.client.updateServerCertificate(
            this.ops["UpdateServerCertificate"].apply(partialParams)
        );
    }

    updateServiceSpecificCredential(partialParams: ToOptional<{
      [K in keyof UpdateServiceSpecificCredentialRequest]: (UpdateServiceSpecificCredentialRequest)[K]
    }>): void {
        return this.client.updateServiceSpecificCredential(
            this.ops["UpdateServiceSpecificCredential"].apply(partialParams)
        );
    }

    updateSigningCertificate(partialParams: ToOptional<{
      [K in keyof UpdateSigningCertificateRequest]: (UpdateSigningCertificateRequest)[K]
    }>): void {
        return this.client.updateSigningCertificate(
            this.ops["UpdateSigningCertificate"].apply(partialParams)
        );
    }

    updateUser(partialParams: ToOptional<{
      [K in keyof UpdateUserRequest]: (UpdateUserRequest)[K]
    }>): void {
        return this.client.updateUser(
            this.ops["UpdateUser"].apply(partialParams)
        );
    }

    uploadSSHPublicKey(partialParams: ToOptional<{
      [K in keyof UploadSSHPublicKeyRequest]: (UploadSSHPublicKeyRequest)[K]
    }>): UploadSSHPublicKeyResponse {
        return this.client.uploadSSHPublicKey(
            this.ops["UploadSSHPublicKey"].apply(partialParams)
        );
    }

    uploadServerCertificate(partialParams: ToOptional<{
      [K in keyof UploadServerCertificateRequest]: (UploadServerCertificateRequest)[K]
    }>): UploadServerCertificateResponse {
        return this.client.uploadServerCertificate(
            this.ops["UploadServerCertificate"].apply(partialParams)
        );
    }

    uploadSigningCertificate(partialParams: ToOptional<{
      [K in keyof UploadSigningCertificateRequest]: (UploadSigningCertificateRequest)[K]
    }>): UploadSigningCertificateResponse {
        return this.client.uploadSigningCertificate(
            this.ops["UploadSigningCertificate"].apply(partialParams)
        );
    }
}