"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const aws = __importStar(require("@pulumi/aws"));
const awssdk = __importStar(require("aws-sdk"));
const parse_1 = require("../parse");
class Resource extends aws.codecommit.Trigger {
    constructor(...args) {
        super(...args);
        this.client = new awssdk.CodeCommit();
        this.ops = (0, parse_1.getResourceOperations)(this, require("../../aws-sdk-js/apis/codecommit-2015-04-13.normal.json"), this.client);
    }
    associateApprovalRuleTemplateWithRepository(partialParams) {
        return this.client.associateApprovalRuleTemplateWithRepository(this.ops["AssociateApprovalRuleTemplateWithRepository"].apply(partialParams));
    }
    batchAssociateApprovalRuleTemplateWithRepositories(partialParams) {
        return this.client.batchAssociateApprovalRuleTemplateWithRepositories(this.ops["BatchAssociateApprovalRuleTemplateWithRepositories"].apply(partialParams));
    }
    batchDescribeMergeConflicts(partialParams) {
        return this.client.batchDescribeMergeConflicts(this.ops["BatchDescribeMergeConflicts"].apply(partialParams));
    }
    batchDisassociateApprovalRuleTemplateFromRepositories(partialParams) {
        return this.client.batchDisassociateApprovalRuleTemplateFromRepositories(this.ops["BatchDisassociateApprovalRuleTemplateFromRepositories"].apply(partialParams));
    }
    batchGetCommits(partialParams) {
        return this.client.batchGetCommits(this.ops["BatchGetCommits"].apply(partialParams));
    }
    batchGetRepositories(partialParams) {
        return this.client.batchGetRepositories(this.ops["BatchGetRepositories"].apply(partialParams));
    }
    createApprovalRuleTemplate(partialParams) {
        return this.client.createApprovalRuleTemplate(this.ops["CreateApprovalRuleTemplate"].apply(partialParams));
    }
    createBranch(partialParams) {
        return this.client.createBranch(this.ops["CreateBranch"].apply(partialParams));
    }
    createCommit(partialParams) {
        return this.client.createCommit(this.ops["CreateCommit"].apply(partialParams));
    }
    createPullRequest(partialParams) {
        return this.client.createPullRequest(this.ops["CreatePullRequest"].apply(partialParams));
    }
    createPullRequestApprovalRule(partialParams) {
        return this.client.createPullRequestApprovalRule(this.ops["CreatePullRequestApprovalRule"].apply(partialParams));
    }
    createRepository(partialParams) {
        return this.client.createRepository(this.ops["CreateRepository"].apply(partialParams));
    }
    createUnreferencedMergeCommit(partialParams) {
        return this.client.createUnreferencedMergeCommit(this.ops["CreateUnreferencedMergeCommit"].apply(partialParams));
    }
    deleteApprovalRuleTemplate(partialParams) {
        return this.client.deleteApprovalRuleTemplate(this.ops["DeleteApprovalRuleTemplate"].apply(partialParams));
    }
    deleteBranch(partialParams) {
        return this.client.deleteBranch(this.ops["DeleteBranch"].apply(partialParams));
    }
    deleteCommentContent(partialParams) {
        return this.client.deleteCommentContent(this.ops["DeleteCommentContent"].apply(partialParams));
    }
    deleteFile(partialParams) {
        return this.client.deleteFile(this.ops["DeleteFile"].apply(partialParams));
    }
    deletePullRequestApprovalRule(partialParams) {
        return this.client.deletePullRequestApprovalRule(this.ops["DeletePullRequestApprovalRule"].apply(partialParams));
    }
    deleteRepository(partialParams) {
        return this.client.deleteRepository(this.ops["DeleteRepository"].apply(partialParams));
    }
    describeMergeConflicts(partialParams) {
        return this.client.describeMergeConflicts(this.ops["DescribeMergeConflicts"].apply(partialParams));
    }
    describePullRequestEvents(partialParams) {
        return this.client.describePullRequestEvents(this.ops["DescribePullRequestEvents"].apply(partialParams));
    }
    disassociateApprovalRuleTemplateFromRepository(partialParams) {
        return this.client.disassociateApprovalRuleTemplateFromRepository(this.ops["DisassociateApprovalRuleTemplateFromRepository"].apply(partialParams));
    }
    evaluatePullRequestApprovalRules(partialParams) {
        return this.client.evaluatePullRequestApprovalRules(this.ops["EvaluatePullRequestApprovalRules"].apply(partialParams));
    }
    getApprovalRuleTemplate(partialParams) {
        return this.client.getApprovalRuleTemplate(this.ops["GetApprovalRuleTemplate"].apply(partialParams));
    }
    getBlob(partialParams) {
        return this.client.getBlob(this.ops["GetBlob"].apply(partialParams));
    }
    getComment(partialParams) {
        return this.client.getComment(this.ops["GetComment"].apply(partialParams));
    }
    getCommentReactions(partialParams) {
        return this.client.getCommentReactions(this.ops["GetCommentReactions"].apply(partialParams));
    }
    getCommentsForComparedCommit(partialParams) {
        return this.client.getCommentsForComparedCommit(this.ops["GetCommentsForComparedCommit"].apply(partialParams));
    }
    getCommentsForPullRequest(partialParams) {
        return this.client.getCommentsForPullRequest(this.ops["GetCommentsForPullRequest"].apply(partialParams));
    }
    getCommit(partialParams) {
        return this.client.getCommit(this.ops["GetCommit"].apply(partialParams));
    }
    getDifferences(partialParams) {
        return this.client.getDifferences(this.ops["GetDifferences"].apply(partialParams));
    }
    getFile(partialParams) {
        return this.client.getFile(this.ops["GetFile"].apply(partialParams));
    }
    getFolder(partialParams) {
        return this.client.getFolder(this.ops["GetFolder"].apply(partialParams));
    }
    getMergeCommit(partialParams) {
        return this.client.getMergeCommit(this.ops["GetMergeCommit"].apply(partialParams));
    }
    getMergeConflicts(partialParams) {
        return this.client.getMergeConflicts(this.ops["GetMergeConflicts"].apply(partialParams));
    }
    getMergeOptions(partialParams) {
        return this.client.getMergeOptions(this.ops["GetMergeOptions"].apply(partialParams));
    }
    getPullRequest(partialParams) {
        return this.client.getPullRequest(this.ops["GetPullRequest"].apply(partialParams));
    }
    getPullRequestApprovalStates(partialParams) {
        return this.client.getPullRequestApprovalStates(this.ops["GetPullRequestApprovalStates"].apply(partialParams));
    }
    getPullRequestOverrideState(partialParams) {
        return this.client.getPullRequestOverrideState(this.ops["GetPullRequestOverrideState"].apply(partialParams));
    }
    getRepository(partialParams) {
        return this.client.getRepository(this.ops["GetRepository"].apply(partialParams));
    }
    getRepositoryTriggers(partialParams) {
        return this.client.getRepositoryTriggers(this.ops["GetRepositoryTriggers"].apply(partialParams));
    }
    listAssociatedApprovalRuleTemplatesForRepository(partialParams) {
        return this.client.listAssociatedApprovalRuleTemplatesForRepository(this.ops["ListAssociatedApprovalRuleTemplatesForRepository"].apply(partialParams));
    }
    listBranches(partialParams) {
        return this.client.listBranches(this.ops["ListBranches"].apply(partialParams));
    }
    listPullRequests(partialParams) {
        return this.client.listPullRequests(this.ops["ListPullRequests"].apply(partialParams));
    }
    listRepositoriesForApprovalRuleTemplate(partialParams) {
        return this.client.listRepositoriesForApprovalRuleTemplate(this.ops["ListRepositoriesForApprovalRuleTemplate"].apply(partialParams));
    }
    listTagsForResource(partialParams) {
        return this.client.listTagsForResource(this.ops["ListTagsForResource"].apply(partialParams));
    }
    mergeBranchesByFastForward(partialParams) {
        return this.client.mergeBranchesByFastForward(this.ops["MergeBranchesByFastForward"].apply(partialParams));
    }
    mergeBranchesBySquash(partialParams) {
        return this.client.mergeBranchesBySquash(this.ops["MergeBranchesBySquash"].apply(partialParams));
    }
    mergeBranchesByThreeWay(partialParams) {
        return this.client.mergeBranchesByThreeWay(this.ops["MergeBranchesByThreeWay"].apply(partialParams));
    }
    mergePullRequestByFastForward(partialParams) {
        return this.client.mergePullRequestByFastForward(this.ops["MergePullRequestByFastForward"].apply(partialParams));
    }
    mergePullRequestBySquash(partialParams) {
        return this.client.mergePullRequestBySquash(this.ops["MergePullRequestBySquash"].apply(partialParams));
    }
    mergePullRequestByThreeWay(partialParams) {
        return this.client.mergePullRequestByThreeWay(this.ops["MergePullRequestByThreeWay"].apply(partialParams));
    }
    overridePullRequestApprovalRules(partialParams) {
        return this.client.overridePullRequestApprovalRules(this.ops["OverridePullRequestApprovalRules"].apply(partialParams));
    }
    postCommentForComparedCommit(partialParams) {
        return this.client.postCommentForComparedCommit(this.ops["PostCommentForComparedCommit"].apply(partialParams));
    }
    postCommentForPullRequest(partialParams) {
        return this.client.postCommentForPullRequest(this.ops["PostCommentForPullRequest"].apply(partialParams));
    }
    postCommentReply(partialParams) {
        return this.client.postCommentReply(this.ops["PostCommentReply"].apply(partialParams));
    }
    putCommentReaction(partialParams) {
        return this.client.putCommentReaction(this.ops["PutCommentReaction"].apply(partialParams));
    }
    putFile(partialParams) {
        return this.client.putFile(this.ops["PutFile"].apply(partialParams));
    }
    putRepositoryTriggers(partialParams) {
        return this.client.putRepositoryTriggers(this.ops["PutRepositoryTriggers"].apply(partialParams));
    }
    tagResource(partialParams) {
        return this.client.tagResource(this.ops["TagResource"].apply(partialParams));
    }
    testRepositoryTriggers(partialParams) {
        return this.client.testRepositoryTriggers(this.ops["TestRepositoryTriggers"].apply(partialParams));
    }
    untagResource(partialParams) {
        return this.client.untagResource(this.ops["UntagResource"].apply(partialParams));
    }
    updateApprovalRuleTemplateContent(partialParams) {
        return this.client.updateApprovalRuleTemplateContent(this.ops["UpdateApprovalRuleTemplateContent"].apply(partialParams));
    }
    updateApprovalRuleTemplateDescription(partialParams) {
        return this.client.updateApprovalRuleTemplateDescription(this.ops["UpdateApprovalRuleTemplateDescription"].apply(partialParams));
    }
    updateApprovalRuleTemplateName(partialParams) {
        return this.client.updateApprovalRuleTemplateName(this.ops["UpdateApprovalRuleTemplateName"].apply(partialParams));
    }
    updateComment(partialParams) {
        return this.client.updateComment(this.ops["UpdateComment"].apply(partialParams));
    }
    updateDefaultBranch(partialParams) {
        return this.client.updateDefaultBranch(this.ops["UpdateDefaultBranch"].apply(partialParams));
    }
    updatePullRequestApprovalRuleContent(partialParams) {
        return this.client.updatePullRequestApprovalRuleContent(this.ops["UpdatePullRequestApprovalRuleContent"].apply(partialParams));
    }
    updatePullRequestApprovalState(partialParams) {
        return this.client.updatePullRequestApprovalState(this.ops["UpdatePullRequestApprovalState"].apply(partialParams));
    }
    updatePullRequestDescription(partialParams) {
        return this.client.updatePullRequestDescription(this.ops["UpdatePullRequestDescription"].apply(partialParams));
    }
    updatePullRequestStatus(partialParams) {
        return this.client.updatePullRequestStatus(this.ops["UpdatePullRequestStatus"].apply(partialParams));
    }
    updatePullRequestTitle(partialParams) {
        return this.client.updatePullRequestTitle(this.ops["UpdatePullRequestTitle"].apply(partialParams));
    }
    updateRepositoryDescription(partialParams) {
        return this.client.updateRepositoryDescription(this.ops["UpdateRepositoryDescription"].apply(partialParams));
    }
    updateRepositoryName(partialParams) {
        return this.client.updateRepositoryName(this.ops["UpdateRepositoryName"].apply(partialParams));
    }
}
exports.default = Resource;
