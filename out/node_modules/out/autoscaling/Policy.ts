
import * as aws from "@pulumi/aws";
import * as awssdk from "aws-sdk";
import {
    AttachInstancesQuery,
    AttachLoadBalancerTargetGroupsType,
    AttachLoadBalancersType,
    BatchDeleteScheduledActionType,
    BatchPutScheduledUpdateGroupActionType,
    CancelInstanceRefreshType,
    CompleteLifecycleActionType,
    CreateAutoScalingGroupType,
    CreateLaunchConfigurationType,
    CreateOrUpdateTagsType,
    DeleteAutoScalingGroupType,
    LaunchConfigurationNameType,
    DeleteLifecycleHookType,
    DeleteNotificationConfigurationType,
    DeletePolicyType,
    DeleteScheduledActionType,
    DeleteTagsType,
    DeleteWarmPoolType,
    DescribeInstanceRefreshesType,
    DescribeLifecycleHooksType,
    DescribeLoadBalancerTargetGroupsRequest,
    DescribeLoadBalancersRequest,
    DescribeWarmPoolType,
    DetachInstancesQuery,
    DetachLoadBalancerTargetGroupsType,
    DetachLoadBalancersType,
    DisableMetricsCollectionQuery,
    EnableMetricsCollectionQuery,
    EnterStandbyQuery,
    ExecutePolicyType,
    ExitStandbyQuery,
    GetPredictiveScalingForecastType,
    PutLifecycleHookType,
    PutNotificationConfigurationType,
    PutScalingPolicyType,
    PutScheduledUpdateGroupActionType,
    PutWarmPoolType,
    RecordLifecycleActionHeartbeatType,
    ScalingProcessQuery,
    SetDesiredCapacityType,
    SetInstanceHealthQuery,
    SetInstanceProtectionQuery,
    StartInstanceRefreshType,
    TerminateInstanceInAutoScalingGroupType,
    UpdateAutoScalingGroupType,
    AttachLoadBalancerTargetGroupsResultType,
    AttachLoadBalancersResultType,
    BatchDeleteScheduledActionAnswer,
    BatchPutScheduledUpdateGroupActionAnswer,
    CancelInstanceRefreshAnswer,
    CompleteLifecycleActionAnswer,
    DeleteLifecycleHookAnswer,
    DeleteWarmPoolAnswer,
    DescribeInstanceRefreshesAnswer,
    DescribeLifecycleHooksAnswer,
    DescribeLoadBalancerTargetGroupsResponse,
    DescribeLoadBalancersResponse,
    DescribeWarmPoolAnswer,
    DetachInstancesAnswer,
    DetachLoadBalancerTargetGroupsResultType,
    DetachLoadBalancersResultType,
    EnterStandbyAnswer,
    ExitStandbyAnswer,
    GetPredictiveScalingForecastAnswer,
    PutLifecycleHookAnswer,
    PolicyARNType,
    PutWarmPoolAnswer,
    RecordLifecycleActionHeartbeatAnswer,
    SetInstanceProtectionAnswer,
    StartInstanceRefreshAnswer,
    ActivityType
} from "aws-sdk/clients/auto scaling";

import {getResourceOperations} from "../parse";

type UndefinedProperties<T> = {
    [P in keyof T]-?: undefined extends T[P] ? P : never
}[keyof T]

type ToOptional<T> = Partial<Pick<T, UndefinedProperties<T>>> & Pick<T, Exclude<keyof T, UndefinedProperties<T>>>

export default class Resource extends aws.autoscaling.Policy {
    private ops: any
    private client: any
    constructor(...args: ConstructorParameters<typeof aws.autoscaling.Policy>) {
        super(...args)
        this.client = new awssdk.AutoScaling()
        this.ops = getResourceOperations(this as any, require("../../aws-sdk-js/apis/autoscaling-2011-01-01.normal.json"), this.client)
    }

    attachInstances(partialParams: ToOptional<{
      [K in keyof AttachInstancesQuery & keyof AttachInstancesQuery & keyof AttachInstancesQuery & keyof AttachInstancesQuery & keyof AttachInstancesQuery & keyof AttachInstancesQuery]: (AttachInstancesQuery & AttachInstancesQuery & AttachInstancesQuery & AttachInstancesQuery & AttachInstancesQuery & AttachInstancesQuery)[K]
    }>): void {
        return this.client.attachInstances(
            this.ops["AttachInstances"].apply(partialParams)
        );
    }

    attachLoadBalancerTargetGroups(partialParams: ToOptional<{
      [K in keyof AttachLoadBalancerTargetGroupsType & keyof AttachLoadBalancerTargetGroupsType & keyof AttachLoadBalancerTargetGroupsType & keyof AttachLoadBalancerTargetGroupsType & keyof AttachLoadBalancerTargetGroupsType & keyof AttachLoadBalancerTargetGroupsType]: (AttachLoadBalancerTargetGroupsType & AttachLoadBalancerTargetGroupsType & AttachLoadBalancerTargetGroupsType & AttachLoadBalancerTargetGroupsType & AttachLoadBalancerTargetGroupsType & AttachLoadBalancerTargetGroupsType)[K]
    }>): AttachLoadBalancerTargetGroupsResultType {
        return this.client.attachLoadBalancerTargetGroups(
            this.ops["AttachLoadBalancerTargetGroups"].apply(partialParams)
        );
    }

    attachLoadBalancers(partialParams: ToOptional<{
      [K in keyof AttachLoadBalancersType & keyof AttachLoadBalancersType & keyof AttachLoadBalancersType & keyof AttachLoadBalancersType & keyof AttachLoadBalancersType & keyof AttachLoadBalancersType]: (AttachLoadBalancersType & AttachLoadBalancersType & AttachLoadBalancersType & AttachLoadBalancersType & AttachLoadBalancersType & AttachLoadBalancersType)[K]
    }>): AttachLoadBalancersResultType {
        return this.client.attachLoadBalancers(
            this.ops["AttachLoadBalancers"].apply(partialParams)
        );
    }

    batchDeleteScheduledAction(partialParams: ToOptional<{
      [K in keyof BatchDeleteScheduledActionType & keyof BatchDeleteScheduledActionType & keyof BatchDeleteScheduledActionType & keyof BatchDeleteScheduledActionType & keyof BatchDeleteScheduledActionType & keyof BatchDeleteScheduledActionType]: (BatchDeleteScheduledActionType & BatchDeleteScheduledActionType & BatchDeleteScheduledActionType & BatchDeleteScheduledActionType & BatchDeleteScheduledActionType & BatchDeleteScheduledActionType)[K]
    }>): BatchDeleteScheduledActionAnswer {
        return this.client.batchDeleteScheduledAction(
            this.ops["BatchDeleteScheduledAction"].apply(partialParams)
        );
    }

    batchPutScheduledUpdateGroupAction(partialParams: ToOptional<{
      [K in keyof BatchPutScheduledUpdateGroupActionType & keyof BatchPutScheduledUpdateGroupActionType & keyof BatchPutScheduledUpdateGroupActionType & keyof BatchPutScheduledUpdateGroupActionType & keyof BatchPutScheduledUpdateGroupActionType & keyof BatchPutScheduledUpdateGroupActionType]: (BatchPutScheduledUpdateGroupActionType & BatchPutScheduledUpdateGroupActionType & BatchPutScheduledUpdateGroupActionType & BatchPutScheduledUpdateGroupActionType & BatchPutScheduledUpdateGroupActionType & BatchPutScheduledUpdateGroupActionType)[K]
    }>): BatchPutScheduledUpdateGroupActionAnswer {
        return this.client.batchPutScheduledUpdateGroupAction(
            this.ops["BatchPutScheduledUpdateGroupAction"].apply(partialParams)
        );
    }

    cancelInstanceRefresh(partialParams: ToOptional<{
      [K in keyof CancelInstanceRefreshType & keyof CancelInstanceRefreshType & keyof CancelInstanceRefreshType & keyof CancelInstanceRefreshType & keyof CancelInstanceRefreshType & keyof CancelInstanceRefreshType]: (CancelInstanceRefreshType & CancelInstanceRefreshType & CancelInstanceRefreshType & CancelInstanceRefreshType & CancelInstanceRefreshType & CancelInstanceRefreshType)[K]
    }>): CancelInstanceRefreshAnswer {
        return this.client.cancelInstanceRefresh(
            this.ops["CancelInstanceRefresh"].apply(partialParams)
        );
    }

    completeLifecycleAction(partialParams: ToOptional<{
      [K in keyof CompleteLifecycleActionType & keyof CompleteLifecycleActionType & keyof CompleteLifecycleActionType & keyof CompleteLifecycleActionType & keyof CompleteLifecycleActionType & keyof CompleteLifecycleActionType]: (CompleteLifecycleActionType & CompleteLifecycleActionType & CompleteLifecycleActionType & CompleteLifecycleActionType & CompleteLifecycleActionType & CompleteLifecycleActionType)[K]
    }>): CompleteLifecycleActionAnswer {
        return this.client.completeLifecycleAction(
            this.ops["CompleteLifecycleAction"].apply(partialParams)
        );
    }

    createAutoScalingGroup(partialParams: ToOptional<{
      [K in keyof CreateAutoScalingGroupType & keyof CreateAutoScalingGroupType & keyof CreateAutoScalingGroupType & keyof CreateAutoScalingGroupType & keyof CreateAutoScalingGroupType & keyof CreateAutoScalingGroupType]: (CreateAutoScalingGroupType & CreateAutoScalingGroupType & CreateAutoScalingGroupType & CreateAutoScalingGroupType & CreateAutoScalingGroupType & CreateAutoScalingGroupType)[K]
    }>): void {
        return this.client.createAutoScalingGroup(
            this.ops["CreateAutoScalingGroup"].apply(partialParams)
        );
    }

    createLaunchConfiguration(partialParams: ToOptional<{
      [K in keyof CreateLaunchConfigurationType & keyof CreateLaunchConfigurationType & keyof CreateLaunchConfigurationType & keyof CreateLaunchConfigurationType & keyof CreateLaunchConfigurationType & keyof CreateLaunchConfigurationType]: (CreateLaunchConfigurationType & CreateLaunchConfigurationType & CreateLaunchConfigurationType & CreateLaunchConfigurationType & CreateLaunchConfigurationType & CreateLaunchConfigurationType)[K]
    }>): void {
        return this.client.createLaunchConfiguration(
            this.ops["CreateLaunchConfiguration"].apply(partialParams)
        );
    }

    createOrUpdateTags(partialParams: ToOptional<{
      [K in keyof CreateOrUpdateTagsType & keyof CreateOrUpdateTagsType & keyof CreateOrUpdateTagsType & keyof CreateOrUpdateTagsType & keyof CreateOrUpdateTagsType & keyof CreateOrUpdateTagsType]: (CreateOrUpdateTagsType & CreateOrUpdateTagsType & CreateOrUpdateTagsType & CreateOrUpdateTagsType & CreateOrUpdateTagsType & CreateOrUpdateTagsType)[K]
    }>): void {
        return this.client.createOrUpdateTags(
            this.ops["CreateOrUpdateTags"].apply(partialParams)
        );
    }

    deleteAutoScalingGroup(partialParams: ToOptional<{
      [K in keyof DeleteAutoScalingGroupType & keyof DeleteAutoScalingGroupType & keyof DeleteAutoScalingGroupType & keyof DeleteAutoScalingGroupType & keyof DeleteAutoScalingGroupType & keyof DeleteAutoScalingGroupType]: (DeleteAutoScalingGroupType & DeleteAutoScalingGroupType & DeleteAutoScalingGroupType & DeleteAutoScalingGroupType & DeleteAutoScalingGroupType & DeleteAutoScalingGroupType)[K]
    }>): void {
        return this.client.deleteAutoScalingGroup(
            this.ops["DeleteAutoScalingGroup"].apply(partialParams)
        );
    }

    deleteLaunchConfiguration(partialParams: ToOptional<{
      [K in keyof LaunchConfigurationNameType & keyof LaunchConfigurationNameType & keyof LaunchConfigurationNameType & keyof LaunchConfigurationNameType & keyof LaunchConfigurationNameType & keyof LaunchConfigurationNameType]: (LaunchConfigurationNameType & LaunchConfigurationNameType & LaunchConfigurationNameType & LaunchConfigurationNameType & LaunchConfigurationNameType & LaunchConfigurationNameType)[K]
    }>): void {
        return this.client.deleteLaunchConfiguration(
            this.ops["DeleteLaunchConfiguration"].apply(partialParams)
        );
    }

    deleteLifecycleHook(partialParams: ToOptional<{
      [K in keyof DeleteLifecycleHookType & keyof DeleteLifecycleHookType & keyof DeleteLifecycleHookType & keyof DeleteLifecycleHookType & keyof DeleteLifecycleHookType & keyof DeleteLifecycleHookType]: (DeleteLifecycleHookType & DeleteLifecycleHookType & DeleteLifecycleHookType & DeleteLifecycleHookType & DeleteLifecycleHookType & DeleteLifecycleHookType)[K]
    }>): DeleteLifecycleHookAnswer {
        return this.client.deleteLifecycleHook(
            this.ops["DeleteLifecycleHook"].apply(partialParams)
        );
    }

    deleteNotificationConfiguration(partialParams: ToOptional<{
      [K in keyof DeleteNotificationConfigurationType & keyof DeleteNotificationConfigurationType & keyof DeleteNotificationConfigurationType & keyof DeleteNotificationConfigurationType & keyof DeleteNotificationConfigurationType & keyof DeleteNotificationConfigurationType]: (DeleteNotificationConfigurationType & DeleteNotificationConfigurationType & DeleteNotificationConfigurationType & DeleteNotificationConfigurationType & DeleteNotificationConfigurationType & DeleteNotificationConfigurationType)[K]
    }>): void {
        return this.client.deleteNotificationConfiguration(
            this.ops["DeleteNotificationConfiguration"].apply(partialParams)
        );
    }

    deletePolicy(partialParams: ToOptional<{
      [K in keyof DeletePolicyType & keyof DeletePolicyType & keyof DeletePolicyType & keyof DeletePolicyType & keyof DeletePolicyType & keyof DeletePolicyType]: (DeletePolicyType & DeletePolicyType & DeletePolicyType & DeletePolicyType & DeletePolicyType & DeletePolicyType)[K]
    }>): void {
        return this.client.deletePolicy(
            this.ops["DeletePolicy"].apply(partialParams)
        );
    }

    deleteScheduledAction(partialParams: ToOptional<{
      [K in keyof DeleteScheduledActionType & keyof DeleteScheduledActionType & keyof DeleteScheduledActionType & keyof DeleteScheduledActionType & keyof DeleteScheduledActionType & keyof DeleteScheduledActionType]: (DeleteScheduledActionType & DeleteScheduledActionType & DeleteScheduledActionType & DeleteScheduledActionType & DeleteScheduledActionType & DeleteScheduledActionType)[K]
    }>): void {
        return this.client.deleteScheduledAction(
            this.ops["DeleteScheduledAction"].apply(partialParams)
        );
    }

    deleteTags(partialParams: ToOptional<{
      [K in keyof DeleteTagsType & keyof DeleteTagsType & keyof DeleteTagsType & keyof DeleteTagsType & keyof DeleteTagsType & keyof DeleteTagsType]: (DeleteTagsType & DeleteTagsType & DeleteTagsType & DeleteTagsType & DeleteTagsType & DeleteTagsType)[K]
    }>): void {
        return this.client.deleteTags(
            this.ops["DeleteTags"].apply(partialParams)
        );
    }

    deleteWarmPool(partialParams: ToOptional<{
      [K in keyof DeleteWarmPoolType & keyof DeleteWarmPoolType & keyof DeleteWarmPoolType & keyof DeleteWarmPoolType & keyof DeleteWarmPoolType & keyof DeleteWarmPoolType]: (DeleteWarmPoolType & DeleteWarmPoolType & DeleteWarmPoolType & DeleteWarmPoolType & DeleteWarmPoolType & DeleteWarmPoolType)[K]
    }>): DeleteWarmPoolAnswer {
        return this.client.deleteWarmPool(
            this.ops["DeleteWarmPool"].apply(partialParams)
        );
    }

    describeInstanceRefreshes(partialParams: ToOptional<{
      [K in keyof DescribeInstanceRefreshesType & keyof DescribeInstanceRefreshesType & keyof DescribeInstanceRefreshesType & keyof DescribeInstanceRefreshesType & keyof DescribeInstanceRefreshesType & keyof DescribeInstanceRefreshesType]: (DescribeInstanceRefreshesType & DescribeInstanceRefreshesType & DescribeInstanceRefreshesType & DescribeInstanceRefreshesType & DescribeInstanceRefreshesType & DescribeInstanceRefreshesType)[K]
    }>): DescribeInstanceRefreshesAnswer {
        return this.client.describeInstanceRefreshes(
            this.ops["DescribeInstanceRefreshes"].apply(partialParams)
        );
    }

    describeLifecycleHooks(partialParams: ToOptional<{
      [K in keyof DescribeLifecycleHooksType & keyof DescribeLifecycleHooksType & keyof DescribeLifecycleHooksType & keyof DescribeLifecycleHooksType & keyof DescribeLifecycleHooksType & keyof DescribeLifecycleHooksType]: (DescribeLifecycleHooksType & DescribeLifecycleHooksType & DescribeLifecycleHooksType & DescribeLifecycleHooksType & DescribeLifecycleHooksType & DescribeLifecycleHooksType)[K]
    }>): DescribeLifecycleHooksAnswer {
        return this.client.describeLifecycleHooks(
            this.ops["DescribeLifecycleHooks"].apply(partialParams)
        );
    }

    describeLoadBalancerTargetGroups(partialParams: ToOptional<{
      [K in keyof DescribeLoadBalancerTargetGroupsRequest & keyof DescribeLoadBalancerTargetGroupsRequest & keyof DescribeLoadBalancerTargetGroupsRequest & keyof DescribeLoadBalancerTargetGroupsRequest & keyof DescribeLoadBalancerTargetGroupsRequest & keyof DescribeLoadBalancerTargetGroupsRequest]: (DescribeLoadBalancerTargetGroupsRequest & DescribeLoadBalancerTargetGroupsRequest & DescribeLoadBalancerTargetGroupsRequest & DescribeLoadBalancerTargetGroupsRequest & DescribeLoadBalancerTargetGroupsRequest & DescribeLoadBalancerTargetGroupsRequest)[K]
    }>): DescribeLoadBalancerTargetGroupsResponse {
        return this.client.describeLoadBalancerTargetGroups(
            this.ops["DescribeLoadBalancerTargetGroups"].apply(partialParams)
        );
    }

    describeLoadBalancers(partialParams: ToOptional<{
      [K in keyof DescribeLoadBalancersRequest & keyof DescribeLoadBalancersRequest & keyof DescribeLoadBalancersRequest & keyof DescribeLoadBalancersRequest & keyof DescribeLoadBalancersRequest & keyof DescribeLoadBalancersRequest]: (DescribeLoadBalancersRequest & DescribeLoadBalancersRequest & DescribeLoadBalancersRequest & DescribeLoadBalancersRequest & DescribeLoadBalancersRequest & DescribeLoadBalancersRequest)[K]
    }>): DescribeLoadBalancersResponse {
        return this.client.describeLoadBalancers(
            this.ops["DescribeLoadBalancers"].apply(partialParams)
        );
    }

    describeWarmPool(partialParams: ToOptional<{
      [K in keyof DescribeWarmPoolType & keyof DescribeWarmPoolType & keyof DescribeWarmPoolType & keyof DescribeWarmPoolType & keyof DescribeWarmPoolType & keyof DescribeWarmPoolType]: (DescribeWarmPoolType & DescribeWarmPoolType & DescribeWarmPoolType & DescribeWarmPoolType & DescribeWarmPoolType & DescribeWarmPoolType)[K]
    }>): DescribeWarmPoolAnswer {
        return this.client.describeWarmPool(
            this.ops["DescribeWarmPool"].apply(partialParams)
        );
    }

    detachInstances(partialParams: ToOptional<{
      [K in keyof DetachInstancesQuery & keyof DetachInstancesQuery & keyof DetachInstancesQuery & keyof DetachInstancesQuery & keyof DetachInstancesQuery & keyof DetachInstancesQuery]: (DetachInstancesQuery & DetachInstancesQuery & DetachInstancesQuery & DetachInstancesQuery & DetachInstancesQuery & DetachInstancesQuery)[K]
    }>): DetachInstancesAnswer {
        return this.client.detachInstances(
            this.ops["DetachInstances"].apply(partialParams)
        );
    }

    detachLoadBalancerTargetGroups(partialParams: ToOptional<{
      [K in keyof DetachLoadBalancerTargetGroupsType & keyof DetachLoadBalancerTargetGroupsType & keyof DetachLoadBalancerTargetGroupsType & keyof DetachLoadBalancerTargetGroupsType & keyof DetachLoadBalancerTargetGroupsType & keyof DetachLoadBalancerTargetGroupsType]: (DetachLoadBalancerTargetGroupsType & DetachLoadBalancerTargetGroupsType & DetachLoadBalancerTargetGroupsType & DetachLoadBalancerTargetGroupsType & DetachLoadBalancerTargetGroupsType & DetachLoadBalancerTargetGroupsType)[K]
    }>): DetachLoadBalancerTargetGroupsResultType {
        return this.client.detachLoadBalancerTargetGroups(
            this.ops["DetachLoadBalancerTargetGroups"].apply(partialParams)
        );
    }

    detachLoadBalancers(partialParams: ToOptional<{
      [K in keyof DetachLoadBalancersType & keyof DetachLoadBalancersType & keyof DetachLoadBalancersType & keyof DetachLoadBalancersType & keyof DetachLoadBalancersType & keyof DetachLoadBalancersType]: (DetachLoadBalancersType & DetachLoadBalancersType & DetachLoadBalancersType & DetachLoadBalancersType & DetachLoadBalancersType & DetachLoadBalancersType)[K]
    }>): DetachLoadBalancersResultType {
        return this.client.detachLoadBalancers(
            this.ops["DetachLoadBalancers"].apply(partialParams)
        );
    }

    disableMetricsCollection(partialParams: ToOptional<{
      [K in keyof DisableMetricsCollectionQuery & keyof DisableMetricsCollectionQuery & keyof DisableMetricsCollectionQuery & keyof DisableMetricsCollectionQuery & keyof DisableMetricsCollectionQuery & keyof DisableMetricsCollectionQuery]: (DisableMetricsCollectionQuery & DisableMetricsCollectionQuery & DisableMetricsCollectionQuery & DisableMetricsCollectionQuery & DisableMetricsCollectionQuery & DisableMetricsCollectionQuery)[K]
    }>): void {
        return this.client.disableMetricsCollection(
            this.ops["DisableMetricsCollection"].apply(partialParams)
        );
    }

    enableMetricsCollection(partialParams: ToOptional<{
      [K in keyof EnableMetricsCollectionQuery & keyof EnableMetricsCollectionQuery & keyof EnableMetricsCollectionQuery & keyof EnableMetricsCollectionQuery & keyof EnableMetricsCollectionQuery & keyof EnableMetricsCollectionQuery]: (EnableMetricsCollectionQuery & EnableMetricsCollectionQuery & EnableMetricsCollectionQuery & EnableMetricsCollectionQuery & EnableMetricsCollectionQuery & EnableMetricsCollectionQuery)[K]
    }>): void {
        return this.client.enableMetricsCollection(
            this.ops["EnableMetricsCollection"].apply(partialParams)
        );
    }

    enterStandby(partialParams: ToOptional<{
      [K in keyof EnterStandbyQuery & keyof EnterStandbyQuery & keyof EnterStandbyQuery & keyof EnterStandbyQuery & keyof EnterStandbyQuery & keyof EnterStandbyQuery]: (EnterStandbyQuery & EnterStandbyQuery & EnterStandbyQuery & EnterStandbyQuery & EnterStandbyQuery & EnterStandbyQuery)[K]
    }>): EnterStandbyAnswer {
        return this.client.enterStandby(
            this.ops["EnterStandby"].apply(partialParams)
        );
    }

    executePolicy(partialParams: ToOptional<{
      [K in keyof ExecutePolicyType & keyof ExecutePolicyType & keyof ExecutePolicyType & keyof ExecutePolicyType & keyof ExecutePolicyType & keyof ExecutePolicyType]: (ExecutePolicyType & ExecutePolicyType & ExecutePolicyType & ExecutePolicyType & ExecutePolicyType & ExecutePolicyType)[K]
    }>): void {
        return this.client.executePolicy(
            this.ops["ExecutePolicy"].apply(partialParams)
        );
    }

    exitStandby(partialParams: ToOptional<{
      [K in keyof ExitStandbyQuery & keyof ExitStandbyQuery & keyof ExitStandbyQuery & keyof ExitStandbyQuery & keyof ExitStandbyQuery & keyof ExitStandbyQuery]: (ExitStandbyQuery & ExitStandbyQuery & ExitStandbyQuery & ExitStandbyQuery & ExitStandbyQuery & ExitStandbyQuery)[K]
    }>): ExitStandbyAnswer {
        return this.client.exitStandby(
            this.ops["ExitStandby"].apply(partialParams)
        );
    }

    getPredictiveScalingForecast(partialParams: ToOptional<{
      [K in keyof GetPredictiveScalingForecastType & keyof GetPredictiveScalingForecastType & keyof GetPredictiveScalingForecastType & keyof GetPredictiveScalingForecastType & keyof GetPredictiveScalingForecastType & keyof GetPredictiveScalingForecastType]: (GetPredictiveScalingForecastType & GetPredictiveScalingForecastType & GetPredictiveScalingForecastType & GetPredictiveScalingForecastType & GetPredictiveScalingForecastType & GetPredictiveScalingForecastType)[K]
    }>): GetPredictiveScalingForecastAnswer {
        return this.client.getPredictiveScalingForecast(
            this.ops["GetPredictiveScalingForecast"].apply(partialParams)
        );
    }

    putLifecycleHook(partialParams: ToOptional<{
      [K in keyof PutLifecycleHookType & keyof PutLifecycleHookType & keyof PutLifecycleHookType & keyof PutLifecycleHookType & keyof PutLifecycleHookType & keyof PutLifecycleHookType]: (PutLifecycleHookType & PutLifecycleHookType & PutLifecycleHookType & PutLifecycleHookType & PutLifecycleHookType & PutLifecycleHookType)[K]
    }>): PutLifecycleHookAnswer {
        return this.client.putLifecycleHook(
            this.ops["PutLifecycleHook"].apply(partialParams)
        );
    }

    putNotificationConfiguration(partialParams: ToOptional<{
      [K in keyof PutNotificationConfigurationType & keyof PutNotificationConfigurationType & keyof PutNotificationConfigurationType & keyof PutNotificationConfigurationType & keyof PutNotificationConfigurationType & keyof PutNotificationConfigurationType]: (PutNotificationConfigurationType & PutNotificationConfigurationType & PutNotificationConfigurationType & PutNotificationConfigurationType & PutNotificationConfigurationType & PutNotificationConfigurationType)[K]
    }>): void {
        return this.client.putNotificationConfiguration(
            this.ops["PutNotificationConfiguration"].apply(partialParams)
        );
    }

    putScalingPolicy(partialParams: ToOptional<{
      [K in keyof PutScalingPolicyType & keyof PutScalingPolicyType & keyof PutScalingPolicyType & keyof PutScalingPolicyType & keyof PutScalingPolicyType & keyof PutScalingPolicyType]: (PutScalingPolicyType & PutScalingPolicyType & PutScalingPolicyType & PutScalingPolicyType & PutScalingPolicyType & PutScalingPolicyType)[K]
    }>): PolicyARNType {
        return this.client.putScalingPolicy(
            this.ops["PutScalingPolicy"].apply(partialParams)
        );
    }

    putScheduledUpdateGroupAction(partialParams: ToOptional<{
      [K in keyof PutScheduledUpdateGroupActionType & keyof PutScheduledUpdateGroupActionType & keyof PutScheduledUpdateGroupActionType & keyof PutScheduledUpdateGroupActionType & keyof PutScheduledUpdateGroupActionType & keyof PutScheduledUpdateGroupActionType]: (PutScheduledUpdateGroupActionType & PutScheduledUpdateGroupActionType & PutScheduledUpdateGroupActionType & PutScheduledUpdateGroupActionType & PutScheduledUpdateGroupActionType & PutScheduledUpdateGroupActionType)[K]
    }>): void {
        return this.client.putScheduledUpdateGroupAction(
            this.ops["PutScheduledUpdateGroupAction"].apply(partialParams)
        );
    }

    putWarmPool(partialParams: ToOptional<{
      [K in keyof PutWarmPoolType & keyof PutWarmPoolType & keyof PutWarmPoolType & keyof PutWarmPoolType & keyof PutWarmPoolType & keyof PutWarmPoolType]: (PutWarmPoolType & PutWarmPoolType & PutWarmPoolType & PutWarmPoolType & PutWarmPoolType & PutWarmPoolType)[K]
    }>): PutWarmPoolAnswer {
        return this.client.putWarmPool(
            this.ops["PutWarmPool"].apply(partialParams)
        );
    }

    recordLifecycleActionHeartbeat(partialParams: ToOptional<{
      [K in keyof RecordLifecycleActionHeartbeatType & keyof RecordLifecycleActionHeartbeatType & keyof RecordLifecycleActionHeartbeatType & keyof RecordLifecycleActionHeartbeatType & keyof RecordLifecycleActionHeartbeatType & keyof RecordLifecycleActionHeartbeatType]: (RecordLifecycleActionHeartbeatType & RecordLifecycleActionHeartbeatType & RecordLifecycleActionHeartbeatType & RecordLifecycleActionHeartbeatType & RecordLifecycleActionHeartbeatType & RecordLifecycleActionHeartbeatType)[K]
    }>): RecordLifecycleActionHeartbeatAnswer {
        return this.client.recordLifecycleActionHeartbeat(
            this.ops["RecordLifecycleActionHeartbeat"].apply(partialParams)
        );
    }

    resumeProcesses(partialParams: ToOptional<{
      [K in keyof ScalingProcessQuery & keyof ScalingProcessQuery & keyof ScalingProcessQuery & keyof ScalingProcessQuery & keyof ScalingProcessQuery & keyof ScalingProcessQuery]: (ScalingProcessQuery & ScalingProcessQuery & ScalingProcessQuery & ScalingProcessQuery & ScalingProcessQuery & ScalingProcessQuery)[K]
    }>): void {
        return this.client.resumeProcesses(
            this.ops["ResumeProcesses"].apply(partialParams)
        );
    }

    setDesiredCapacity(partialParams: ToOptional<{
      [K in keyof SetDesiredCapacityType & keyof SetDesiredCapacityType & keyof SetDesiredCapacityType & keyof SetDesiredCapacityType & keyof SetDesiredCapacityType & keyof SetDesiredCapacityType]: (SetDesiredCapacityType & SetDesiredCapacityType & SetDesiredCapacityType & SetDesiredCapacityType & SetDesiredCapacityType & SetDesiredCapacityType)[K]
    }>): void {
        return this.client.setDesiredCapacity(
            this.ops["SetDesiredCapacity"].apply(partialParams)
        );
    }

    setInstanceHealth(partialParams: ToOptional<{
      [K in keyof SetInstanceHealthQuery & keyof SetInstanceHealthQuery & keyof SetInstanceHealthQuery & keyof SetInstanceHealthQuery & keyof SetInstanceHealthQuery & keyof SetInstanceHealthQuery]: (SetInstanceHealthQuery & SetInstanceHealthQuery & SetInstanceHealthQuery & SetInstanceHealthQuery & SetInstanceHealthQuery & SetInstanceHealthQuery)[K]
    }>): void {
        return this.client.setInstanceHealth(
            this.ops["SetInstanceHealth"].apply(partialParams)
        );
    }

    setInstanceProtection(partialParams: ToOptional<{
      [K in keyof SetInstanceProtectionQuery & keyof SetInstanceProtectionQuery & keyof SetInstanceProtectionQuery & keyof SetInstanceProtectionQuery & keyof SetInstanceProtectionQuery & keyof SetInstanceProtectionQuery]: (SetInstanceProtectionQuery & SetInstanceProtectionQuery & SetInstanceProtectionQuery & SetInstanceProtectionQuery & SetInstanceProtectionQuery & SetInstanceProtectionQuery)[K]
    }>): SetInstanceProtectionAnswer {
        return this.client.setInstanceProtection(
            this.ops["SetInstanceProtection"].apply(partialParams)
        );
    }

    startInstanceRefresh(partialParams: ToOptional<{
      [K in keyof StartInstanceRefreshType & keyof StartInstanceRefreshType & keyof StartInstanceRefreshType & keyof StartInstanceRefreshType & keyof StartInstanceRefreshType & keyof StartInstanceRefreshType]: (StartInstanceRefreshType & StartInstanceRefreshType & StartInstanceRefreshType & StartInstanceRefreshType & StartInstanceRefreshType & StartInstanceRefreshType)[K]
    }>): StartInstanceRefreshAnswer {
        return this.client.startInstanceRefresh(
            this.ops["StartInstanceRefresh"].apply(partialParams)
        );
    }

    suspendProcesses(partialParams: ToOptional<{
      [K in keyof ScalingProcessQuery & keyof ScalingProcessQuery & keyof ScalingProcessQuery & keyof ScalingProcessQuery & keyof ScalingProcessQuery & keyof ScalingProcessQuery]: (ScalingProcessQuery & ScalingProcessQuery & ScalingProcessQuery & ScalingProcessQuery & ScalingProcessQuery & ScalingProcessQuery)[K]
    }>): void {
        return this.client.suspendProcesses(
            this.ops["SuspendProcesses"].apply(partialParams)
        );
    }

    terminateInstanceInAutoScalingGroup(partialParams: ToOptional<{
      [K in keyof TerminateInstanceInAutoScalingGroupType & keyof TerminateInstanceInAutoScalingGroupType & keyof TerminateInstanceInAutoScalingGroupType & keyof TerminateInstanceInAutoScalingGroupType & keyof TerminateInstanceInAutoScalingGroupType & keyof TerminateInstanceInAutoScalingGroupType]: (TerminateInstanceInAutoScalingGroupType & TerminateInstanceInAutoScalingGroupType & TerminateInstanceInAutoScalingGroupType & TerminateInstanceInAutoScalingGroupType & TerminateInstanceInAutoScalingGroupType & TerminateInstanceInAutoScalingGroupType)[K]
    }>): ActivityType {
        return this.client.terminateInstanceInAutoScalingGroup(
            this.ops["TerminateInstanceInAutoScalingGroup"].apply(partialParams)
        );
    }

    updateAutoScalingGroup(partialParams: ToOptional<{
      [K in keyof UpdateAutoScalingGroupType & keyof UpdateAutoScalingGroupType & keyof UpdateAutoScalingGroupType & keyof UpdateAutoScalingGroupType & keyof UpdateAutoScalingGroupType & keyof UpdateAutoScalingGroupType]: (UpdateAutoScalingGroupType & UpdateAutoScalingGroupType & UpdateAutoScalingGroupType & UpdateAutoScalingGroupType & UpdateAutoScalingGroupType & UpdateAutoScalingGroupType)[K]
    }>): void {
        return this.client.updateAutoScalingGroup(
            this.ops["UpdateAutoScalingGroup"].apply(partialParams)
        );
    }
}